{"version":3,"sources":["../node_modules/react-table/index.js","../node_modules/match-sorter/dist/match-sorter.esm.js","../../src/publicUtils.js","../../src/utils.js","../../src/makeDefaultPluginHooks.js","../../src/hooks/useColumnVisibility.js","../../src/hooks/useTable.js","../../src/plugin-hooks/useExpanded.js","../../src/filterTypes.js","../../src/plugin-hooks/useFilters.js","../../src/plugin-hooks/useGlobalFilter.js","../../src/aggregations.js","../../src/plugin-hooks/useGroupBy.js","../../src/sortTypes.js","../../src/plugin-hooks/useSortBy.js","../../src/plugin-hooks/usePagination.js","../../src/plugin-hooks/_UNSTABLE_usePivotColumns.js","../../src/plugin-hooks/useRowSelect.js","../../src/plugin-hooks/useRowState.js","../../src/plugin-hooks/useColumnOrder.js","../../src/plugin-hooks/useResizeColumns.js","../../src/plugin-hooks/useAbsoluteLayout.js","../../src/plugin-hooks/useBlockLayout.js","../../src/plugin-hooks/useFlexLayout.js","../../src/plugin-hooks/useGridLayout.js","../node_modules/remove-accents/index.js","../node_modules/reactstrap/es/Table.js","../node_modules/reactstrap/es/Pagination.js","../node_modules/reactstrap/es/PaginationItem.js","../node_modules/reactstrap/es/PaginationLink.js"],"names":["module","exports","require","rankings","CASE_SENSITIVE_EQUAL","EQUAL","STARTS_WITH","WORD_STARTS_WITH","CONTAINS","ACRONYM","MATCHES","NO_MATCH","matchSorter","defaultBaseSortFn","a","b","String","rankedValue","localeCompare","items","value","options","_options","keys","_options$threshold","threshold","_options$baseSort","baseSort","_options$sorter","sorter","matchedItems","sort","aFirst","bFirst","aRank","rank","aKeyIndex","keyIndex","bRank","bKeyIndex","sortRankedValues","reduce","matches","item","index","rankingInfo","getMatchRanking","keyThreshold","allValues","j","J","length","key","attributes","getKeyAttributes","itemValues","getItemValues","i","I","push","itemValue","getAllValuesToRank","_ref2","_ref3","newRank","newRankedValue","minRanking","maxRanking","getHighestRanking","_rankingInfo$keyThres","_extends","map","_ref","testString","stringToRank","prepareValueForComparison","toLowerCase","startsWith","includes","string","acronym","split","forEach","wordInString","splitByHyphenWord","substr","getAcronym","matchingInOrderCharCount","charNumber","findMatchingCharacter","matchChar","getRanking","spread","spreadPercentage","inOrderPercentage","firstIndex","getClosenessRanking","_ref4","keepDiacritics","removeAccents","Object","hasOwnProperty","call","path","values","nestedKey","nestedValues","nestedItem","nestedValue","concat","Array","isArray","result","apply","getNestedValues","defaultKeyAttributes","Infinity","actions","init","defaultRenderer","t","emptyRenderer","React","defaultColumn","Cell","width","minWidth","maxWidth","Number","MAX_SAFE_INTEGER","mergeProps","propList","props","next","style","className","makePropGetter","hooks","meta","userProps","prev","handlePropGetter","prevProps","reduceHooks","initial","allowUndefined","loopHooks","context","hook","ensurePluginOrder","plugins","befores","pluginName","afters","findIndex","plugin","before","functionalUpdate","updater","old","useGetLatest","obj","ref","useRef","current","useCallback","safeUseLayoutEffect","document","useLayoutEffect","useEffect","useMountedLayoutEffect","fn","deps","mountedRef","makeRenderer","instance","column","type","Comp","console","info","Error","flexRender","component","proto","getPrototypeOf","prototype","isReactComponent","$$typeof","description","linkColumnStructure","columns","parent","depth","assignColumnAccessor","flattenColumns","flattenBy","id","accessor","Header","accessorPath","row","def","val","cacheKey","JSON","stringify","pathObj","pathObjCache","get","flattenDeep","arr","newArr","d","replace","join","reOpenBracket","reCloseBracket","set","cursor","pathPart","e","error","assign","decorateColumn","userDefaultColumn","Footer","originalWidth","makeHeaderGroups","allColumns","additionalHeaderProperties","headerGroups","scanColumns","uid","getUID","headerGroup","headers","parentColumns","hasParents","some","newParent","latestParentColumn","reverse","originalId","placeholderOf","Map","getFirstDefined","args","isFunction","flat","recurse","expandRows","rows","manualExpandedKey","expanded","expandSubRows","expandedRows","handleRow","addToExpandedRows","isExpanded","original","canExpand","subRows","getFilterMethod","filter","userFilterTypes","filterTypes","text","shouldAutoRemoveFilter","autoRemove","unpreparedAccessWarning","passiveSupported","defaultGetTableProps","role","defaultGetTableBodyProps","defaultGetHeaderProps","colSpan","totalVisibleHeaderCount","defaultGetFooterProps","defaultGetHeaderGroupProps","defaultGetFooterGroupProps","defaultGetRowProps","defaultGetCellProps","cell","makeDefaultPluginHooks","useOptions","stateReducers","useControlledState","columnsDeps","allColumnsDeps","accessValue","materializedColumns","materializedColumnsDeps","useInstanceAfterData","visibleColumns","visibleColumnsDeps","headerGroupsDeps","useInstanceBeforeDimensions","useInstance","prepareRow","getTableProps","getTableBodyProps","getHeaderGroupProps","getFooterGroupProps","getHeaderProps","getFooterProps","getRowProps","getCellProps","useFinalInstance","resetHiddenColumns","toggleHideColumn","setHiddenColumns","toggleHideAllColumns","useColumnVisibility","getToggleHiddenProps","defaultGetToggleHiddenProps","getToggleHideAllColumnsProps","defaultGetToggleHideAllColumnsProps","reducer","state","hiddenColumns","onChange","toggleHidden","target","checked","isVisible","title","allColumnsHidden","indeterminate","action","previousState","initialState","columnId","subHeader","handleColumn","parentVisible","subColumn","flatHeaders","dispatch","getHooks","autoResetHiddenColumns","getInstance","getAutoResetHiddenColumns","defaultInitialState","defaultColumnInstance","defaultReducer","prevState","defaultGetSubRows","defaultGetRowId","defaultUseControlledState","applyDefaults","getSubRows","getRowId","stateReducer","calculateHeaderWidths","left","sumTotalMinWidth","sumTotalWidth","sumTotalMaxWidth","sumTotalFlexWidth","header","subHeaders","totalLeft","totalMinWidth","totalWidth","totalMaxWidth","totalFlexWidth","Math","min","max","canResize","accessRowsForColumn","data","flatRows","rowsById","accessValueHooks","originalRow","rowIndex","accessRow","parentRows","originalSubRows","cells","resetExpanded","toggleRowExpanded","toggleAllRowsExpanded","useExpanded","getToggleAllRowsExpandedProps","defaultGetToggleAllRowsExpandedProps","getToggleRowExpandedProps","defaultGetToggleRowExpandedProps","onClick","isAllRowsExpanded","rowId","r","setExpanded","exists","shouldExist","f","s","paginateExpandedRows","autoResetExpanded","getAutoResetExpanded","Boolean","useMemo","expandedDepth","maxDepth","splitId","preExpandedRows","ids","filterValue","rowValue","exactText","exactTextCase","includesAll","every","includesSome","includesValue","exact","equals","between","temp","__proto__","resetFilters","setFilter","setAllFilters","useFilters","filters","find","filterMethod","previousfilter","newFilter","manualFilters","defaultCanFilter","disableFilters","autoResetFilters","columnDefaultCanFilter","columnDisableFilters","canFilter","undefined","found","filteredFlatRows","filteredRowsById","filterRows","filteredRows","filteredSoFar","preFilteredRows","warn","getAutoResetFilters","preFilteredFlatRows","preFilteredRowsById","resetGlobalFilter","setGlobalFilter","useGlobalFilter","globalFilter","manualGlobalFilter","globalFilterValue","autoResetGlobalFilter","disableGlobalFilter","columnDisableGlobalFilter","filterableColumns","c","globalFilteredRows","globalFilteredFlatRows","globalFilteredRowsById","getAutoResetGlobalFilter","preGlobalFilteredRows","preGlobalFilteredFlatRows","preGlobalFilteredRowsById","sum","aggregatedValues","mid","floor","nums","unique","from","Set","size","emptyArray","emptyObject","resetGroupBy","setGroupBy","toggleGroupBy","useGroupBy","getGroupByToggleProps","defaultGetGroupByToggleProps","groupBy","canGroupBy","persist","resolvedGroupBy","groupByColumns","g","col","nonGroupByColumns","isGrouped","groupedIndex","indexOf","defaultUserAggregations","groupByFn","defaultGroupByFn","manualGroupBy","aggregations","userAggregations","autoResetGroupBy","disableGroupBy","defaultCanGroupBy","defaultColumnGroupBy","defaultGroupBy","columnDisableGroupBy","Aggregated","existingGroupBy","groupedFlatRows","groupedRowsById","onlyGroupedFlatRows","onlyGroupedRowsById","nonGroupedFlatRows","nonGroupedRowsById","groupedRows","groupUpRecursively","parentId","rowGroupsMap","entries","groupByVal","leafRows","aggregateFn","aggregate","groupedValues","leafValues","columnValue","aggregateValue","aggregateValueFn","groupByID","subRow","getAutoResetGroupBy","preGroupedRows","preGroupedFlatRow","preGroupedRowsById","allCells","isPlaceholder","isAggregated","_row$subRows","resKey","reSplitAlphaNumeric","compareBasic","getRowValuesByColumnID","row1","row2","toString","isNaN","alphanumeric","rowA","rowB","aa","shift","bb","an","parseInt","bn","combo","getTime","alower","blower","replaceNonNumeric","resetSortBy","setSortBy","toggleSortBy","clearSortBy","sortType","sortDescFirst","useSortBy","getSortByToggleProps","defaultGetSortByToggleProps","isMultiSortEvent","shiftKey","canSort","disableMultiSort","sortBy","sortAction","desc","multi","disableSortRemove","disableMultiRemove","maxMultiSortColCount","existingSortBy","existingIndex","hasDescDefined","newSortBy","splice","orderByFn","defaultOrderByFn","userSortTypes","sortTypes","manualSortBy","defaultCanSort","disableSortBy","autoResetSortBy","defaultColumnCanSort","columnDisableSortBy","columnSort","isSorted","sortedIndex","isSortedDesc","sortedFlatRows","availableSortBy","sortData","sortedData","sortMethod","sortInverted","sortedRows","getAutoResetSortBy","preSortedRows","preSortedFlatRows","funcs","dirs","sortFn","sortInt","resetPage","gotoPage","setPageSize","usePagination","pageSize","pageIndex","pageCount","page","newPageIndex","canNavigate","topRowIndex","autoResetPage","userPageCount","manualPagination","getAutoResetPage","ceil","pageOptions","fill","pageStart","pageEnd","slice","canPreviousPage","canNextPage","previousPage","nextPage","resetPivot","togglePivot","_UNSTABLE_usePivotColumns","getPivotToggleProps","defaultGetPivotToggleProps","defaultPivotColumns","canPivot","pivotColumns","setPivot","resolvedPivot","isPivotSource","uniqueValues","add","materialized","sourceColumns","newMaterialized","buildPivotColumns","pivotFilters","pivotColumn","u","uniqueValue","columnGroup","PivotHeader","isPivotGroup","pivotValue","sourceColumn","isPivoted","autoResetPivot","manaulPivot","disablePivot","defaultCanPivot","defaultColumnPivot","defaultPivot","columnDisablePivot","getAutoResetPivot","resetSelectedRows","toggleAllRowsSelected","toggleRowSelected","toggleAllPageRowsSelected","useRowSelect","getToggleRowSelectedProps","defaultGetToggleRowSelectedProps","getToggleAllRowsSelectedProps","defaultGetToggleAllRowsSelectedProps","getToggleAllPageRowsSelectedProps","defaultGetToggleAllPageRowsSelectedProps","manualRowSelectedKey","isSelected","isSomeSelected","isAllRowsSelected","selectedRowIds","isAllPageRowsSelected","setSelected","selectAll","selectSubRows","newSelectedRowIds","handleRowById","autoResetSelectedRows","selectedFlatRows","getRowIsSelected","allChildrenSelected","someSelected","getAutoResetSelectedRows","defaultInitialRowStateAccessor","defaultInitialCellStateAccessor","setRowState","setCellState","resetRowState","useRowState","initialRowStateAccessor","initialCellStateAccessor","rowState","oldRowState","oldCellState","cellState","_rowsById$_rowId","_rowsById$_rowId$cell","w","autoResetRowState","getAutoResetRowState","setState","resetColumnOrder","setColumnOrder","useColumnOrder","columnOrder","columnOrderCopy","columnsCopy","columnsInOrder","targetColumnId","foundIndex","columnStartResizing","columnResizing","columnDoneResizing","resetResize","useResizeColumns","getResizerProps","defaultGetResizerProps","position","onResizeStart","isTouchEvent","touches","headerIdWidths","leafHeaders","recurseHeader","clientX","round","dispatchMove","clientXPos","dispatchEnd","handlersAndEvents","mouse","moveEvent","moveHandler","upEvent","upHandler","removeEventListener","touch","cancelable","preventDefault","stopPropagation","events","passiveIfSupported","supported","window","addEventListener","err","passive","columnWidth","onMouseDown","onTouchStart","draggable","columnWidths","startX","isResizingColumn","percentageDeltaX","newColumnWidths","headerId","headerWidth","disableResizing","isResizing","autoResetResize","getAutoResetResize","resetResizing","cellStyles","top","useAbsoluteLayout","getRowStyles","totalColumnsWidth","display","boxSizing","useBlockLayout","useFlexLayout","totalColumnsMinWidth","flex","useGridLayout","gridTemplateColumns","gridLayout","columnIndex","elWidth","getElementById","_document$getElementB","offsetWidth","startingWidth","newWidth","columnWidthsCopy","defaultFn","defaultWait","debounceRef","getDefaultFn","getDefaultWait","promise","Promise","resolve","reject","timeout","clearTimeout","setTimeout","userColumns","getStateReducer","handler","useReducer","reducerState","allColumnsQueue","initialRows","all","visibleColumnsDep","totalColumnsMaxWidth","render","footerGroups","characterMap","chars","allAccents","RegExp","firstAccent","match","has","remove","_excluded","propTypes","PropTypes","cssModule","object","bordered","bool","borderless","striped","dark","hover","responsive","oneOfType","tag","tagPropType","responsiveTag","innerRef","func","Table","Tag","ResponsiveTag","_objectWithoutPropertiesLoose","classes","mapToCssModules","classNames","table","createElement","responsiveClassName","defaultProps","children","node","listClassName","listTag","Pagination","_classNames","ListTag","label","listClasses","active","disabled","PaginationItem","previous","first","last","PaginationLink","defaultAriaLabel","defaultCaret","ariaLabel","href"],"mappings":"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","file":"static/js/1.aa05d217.chunk.js","sourcesContent":["if (process.env.NODE_ENV === 'production') {\n  module.exports = require('./dist/react-table.production.min.js')\n} else {\n  module.exports = require('./dist/react-table.development.js')\n}\n","import _extends from '@babel/runtime/helpers/esm/extends';\nimport removeAccents from 'remove-accents';\n\nvar rankings = {\n  CASE_SENSITIVE_EQUAL: 7,\n  EQUAL: 6,\n  STARTS_WITH: 5,\n  WORD_STARTS_WITH: 4,\n  CONTAINS: 3,\n  ACRONYM: 2,\n  MATCHES: 1,\n  NO_MATCH: 0\n};\nmatchSorter.rankings = rankings;\n\nvar defaultBaseSortFn = function defaultBaseSortFn(a, b) {\n  return String(a.rankedValue).localeCompare(String(b.rankedValue));\n};\n/**\n * Takes an array of items and a value and returns a new array with the items that match the given value\n * @param {Array} items - the items to sort\n * @param {String} value - the value to use for ranking\n * @param {Object} options - Some options to configure the sorter\n * @return {Array} - the new sorted array\n */\n\n\nfunction matchSorter(items, value, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var _options = options,\n      keys = _options.keys,\n      _options$threshold = _options.threshold,\n      threshold = _options$threshold === void 0 ? rankings.MATCHES : _options$threshold,\n      _options$baseSort = _options.baseSort,\n      baseSort = _options$baseSort === void 0 ? defaultBaseSortFn : _options$baseSort,\n      _options$sorter = _options.sorter,\n      sorter = _options$sorter === void 0 ? function (matchedItems) {\n    return matchedItems.sort(function (a, b) {\n      return sortRankedValues(a, b, baseSort);\n    });\n  } : _options$sorter;\n  var matchedItems = items.reduce(reduceItemsToRanked, []);\n  return sorter(matchedItems).map(function (_ref) {\n    var item = _ref.item;\n    return item;\n  });\n\n  function reduceItemsToRanked(matches, item, index) {\n    var rankingInfo = getHighestRanking(item, keys, value, options);\n    var rank = rankingInfo.rank,\n        _rankingInfo$keyThres = rankingInfo.keyThreshold,\n        keyThreshold = _rankingInfo$keyThres === void 0 ? threshold : _rankingInfo$keyThres;\n\n    if (rank >= keyThreshold) {\n      matches.push(_extends({}, rankingInfo, {\n        item: item,\n        index: index\n      }));\n    }\n\n    return matches;\n  }\n}\n/**\n * Gets the highest ranking for value for the given item based on its values for the given keys\n * @param {*} item - the item to rank\n * @param {Array} keys - the keys to get values from the item for the ranking\n * @param {String} value - the value to rank against\n * @param {Object} options - options to control the ranking\n * @return {{rank: Number, keyIndex: Number, keyThreshold: Number}} - the highest ranking\n */\n\n\nfunction getHighestRanking(item, keys, value, options) {\n  if (!keys) {\n    // if keys is not specified, then we assume the item given is ready to be matched\n    var stringItem = item;\n    return {\n      // ends up being duplicate of 'item' in matches but consistent\n      rankedValue: stringItem,\n      rank: getMatchRanking(stringItem, value, options),\n      keyIndex: -1,\n      keyThreshold: options.threshold\n    };\n  }\n\n  var valuesToRank = getAllValuesToRank(item, keys);\n  return valuesToRank.reduce(function (_ref2, _ref3, i) {\n    var rank = _ref2.rank,\n        rankedValue = _ref2.rankedValue,\n        keyIndex = _ref2.keyIndex,\n        keyThreshold = _ref2.keyThreshold;\n    var itemValue = _ref3.itemValue,\n        attributes = _ref3.attributes;\n    var newRank = getMatchRanking(itemValue, value, options);\n    var newRankedValue = rankedValue;\n    var minRanking = attributes.minRanking,\n        maxRanking = attributes.maxRanking,\n        threshold = attributes.threshold;\n\n    if (newRank < minRanking && newRank >= rankings.MATCHES) {\n      newRank = minRanking;\n    } else if (newRank > maxRanking) {\n      newRank = maxRanking;\n    }\n\n    if (newRank > rank) {\n      rank = newRank;\n      keyIndex = i;\n      keyThreshold = threshold;\n      newRankedValue = itemValue;\n    }\n\n    return {\n      rankedValue: newRankedValue,\n      rank: rank,\n      keyIndex: keyIndex,\n      keyThreshold: keyThreshold\n    };\n  }, {\n    rankedValue: item,\n    rank: rankings.NO_MATCH,\n    keyIndex: -1,\n    keyThreshold: options.threshold\n  });\n}\n/**\n * Gives a rankings score based on how well the two strings match.\n * @param {String} testString - the string to test against\n * @param {String} stringToRank - the string to rank\n * @param {Object} options - options for the match (like keepDiacritics for comparison)\n * @returns {Number} the ranking for how well stringToRank matches testString\n */\n\n\nfunction getMatchRanking(testString, stringToRank, options) {\n  testString = prepareValueForComparison(testString, options);\n  stringToRank = prepareValueForComparison(stringToRank, options); // too long\n\n  if (stringToRank.length > testString.length) {\n    return rankings.NO_MATCH;\n  } // case sensitive equals\n\n\n  if (testString === stringToRank) {\n    return rankings.CASE_SENSITIVE_EQUAL;\n  } // Lower casing before further comparison\n\n\n  testString = testString.toLowerCase();\n  stringToRank = stringToRank.toLowerCase(); // case insensitive equals\n\n  if (testString === stringToRank) {\n    return rankings.EQUAL;\n  } // starts with\n\n\n  if (testString.startsWith(stringToRank)) {\n    return rankings.STARTS_WITH;\n  } // word starts with\n\n\n  if (testString.includes(\" \" + stringToRank)) {\n    return rankings.WORD_STARTS_WITH;\n  } // contains\n\n\n  if (testString.includes(stringToRank)) {\n    return rankings.CONTAINS;\n  } else if (stringToRank.length === 1) {\n    // If the only character in the given stringToRank\n    //   isn't even contained in the testString, then\n    //   it's definitely not a match.\n    return rankings.NO_MATCH;\n  } // acronym\n\n\n  if (getAcronym(testString).includes(stringToRank)) {\n    return rankings.ACRONYM;\n  } // will return a number between rankings.MATCHES and\n  // rankings.MATCHES + 1 depending  on how close of a match it is.\n\n\n  return getClosenessRanking(testString, stringToRank);\n}\n/**\n * Generates an acronym for a string.\n *\n * @param {String} string the string for which to produce the acronym\n * @returns {String} the acronym\n */\n\n\nfunction getAcronym(string) {\n  var acronym = '';\n  var wordsInString = string.split(' ');\n  wordsInString.forEach(function (wordInString) {\n    var splitByHyphenWords = wordInString.split('-');\n    splitByHyphenWords.forEach(function (splitByHyphenWord) {\n      acronym += splitByHyphenWord.substr(0, 1);\n    });\n  });\n  return acronym;\n}\n/**\n * Returns a score based on how spread apart the\n * characters from the stringToRank are within the testString.\n * A number close to rankings.MATCHES represents a loose match. A number close\n * to rankings.MATCHES + 1 represents a tighter match.\n * @param {String} testString - the string to test against\n * @param {String} stringToRank - the string to rank\n * @returns {Number} the number between rankings.MATCHES and\n * rankings.MATCHES + 1 for how well stringToRank matches testString\n */\n\n\nfunction getClosenessRanking(testString, stringToRank) {\n  var matchingInOrderCharCount = 0;\n  var charNumber = 0;\n\n  function findMatchingCharacter(matchChar, string, index) {\n    for (var j = index, J = string.length; j < J; j++) {\n      var stringChar = string[j];\n\n      if (stringChar === matchChar) {\n        matchingInOrderCharCount += 1;\n        return j + 1;\n      }\n    }\n\n    return -1;\n  }\n\n  function getRanking(spread) {\n    var spreadPercentage = 1 / spread;\n    var inOrderPercentage = matchingInOrderCharCount / stringToRank.length;\n    var ranking = rankings.MATCHES + inOrderPercentage * spreadPercentage;\n    return ranking;\n  }\n\n  var firstIndex = findMatchingCharacter(stringToRank[0], testString, 0);\n\n  if (firstIndex < 0) {\n    return rankings.NO_MATCH;\n  }\n\n  charNumber = firstIndex;\n\n  for (var i = 1, I = stringToRank.length; i < I; i++) {\n    var matchChar = stringToRank[i];\n    charNumber = findMatchingCharacter(matchChar, testString, charNumber);\n    var found = charNumber > -1;\n\n    if (!found) {\n      return rankings.NO_MATCH;\n    }\n  }\n\n  var spread = charNumber - firstIndex;\n  return getRanking(spread);\n}\n/**\n * Sorts items that have a rank, index, and keyIndex\n * @param {Object} a - the first item to sort\n * @param {Object} b - the second item to sort\n * @return {Number} -1 if a should come first, 1 if b should come first, 0 if equal\n */\n\n\nfunction sortRankedValues(a, b, baseSort) {\n  var aFirst = -1;\n  var bFirst = 1;\n  var aRank = a.rank,\n      aKeyIndex = a.keyIndex;\n  var bRank = b.rank,\n      bKeyIndex = b.keyIndex;\n  var same = aRank === bRank;\n\n  if (same) {\n    if (aKeyIndex === bKeyIndex) {\n      // use the base sort function as a tie-breaker\n      return baseSort(a, b);\n    } else {\n      return aKeyIndex < bKeyIndex ? aFirst : bFirst;\n    }\n  } else {\n    return aRank > bRank ? aFirst : bFirst;\n  }\n}\n/**\n * Prepares value for comparison by stringifying it, removing diacritics (if specified)\n * @param {String} value - the value to clean\n * @param {Object} options - {keepDiacritics: whether to remove diacritics}\n * @return {String} the prepared value\n */\n\n\nfunction prepareValueForComparison(value, _ref4) {\n  var keepDiacritics = _ref4.keepDiacritics;\n  // value might not actually be a string at this point (we don't get to choose)\n  // so part of preparing the value for comparison is ensure that it is a string\n  value = \"\" + value; // toString\n\n  if (!keepDiacritics) {\n    value = removeAccents(value);\n  }\n\n  return value;\n}\n/**\n * Gets value for key in item at arbitrarily nested keypath\n * @param {Object} item - the item\n * @param {Object|Function} key - the potentially nested keypath or property callback\n * @return {Array} - an array containing the value(s) at the nested keypath\n */\n\n\nfunction getItemValues(item, key) {\n  if (typeof key === 'object') {\n    key = key.key;\n  }\n\n  var value;\n\n  if (typeof key === 'function') {\n    value = key(item);\n  } else if (item == null) {\n    value = null;\n  } else if (Object.hasOwnProperty.call(item, key)) {\n    value = item[key];\n  } else if (key.includes('.')) {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-call\n    return getNestedValues(key, item);\n  } else {\n    value = null;\n  } // because `value` can also be undefined\n\n\n  if (value == null) {\n    return [];\n  }\n\n  if (Array.isArray(value)) {\n    return value;\n  }\n\n  return [String(value)];\n}\n/**\n * Given path: \"foo.bar.baz\"\n * And item: {foo: {bar: {baz: 'buzz'}}}\n *   -> 'buzz'\n * @param path a dot-separated set of keys\n * @param item the item to get the value from\n */\n\n\nfunction getNestedValues(path, item) {\n  var keys = path.split('.');\n  var values = [item];\n\n  for (var i = 0, I = keys.length; i < I; i++) {\n    var nestedKey = keys[i];\n    var nestedValues = [];\n\n    for (var j = 0, J = values.length; j < J; j++) {\n      var nestedItem = values[j];\n      if (nestedItem == null) continue;\n\n      if (Object.hasOwnProperty.call(nestedItem, nestedKey)) {\n        var nestedValue = nestedItem[nestedKey];\n\n        if (nestedValue != null) {\n          nestedValues.push(nestedValue);\n        }\n      } else if (nestedKey === '*') {\n        // ensure that values is an array\n        nestedValues = nestedValues.concat(nestedItem);\n      }\n    }\n\n    values = nestedValues;\n  }\n\n  if (Array.isArray(values[0])) {\n    // keep allowing the implicit wildcard for an array of strings at the end of\n    // the path; don't use `.flat()` because that's not available in node.js v10\n    var result = [];\n    return result.concat.apply(result, values);\n  } // Based on our logic it should be an array of strings by now...\n  // assuming the user's path terminated in strings\n\n\n  return values;\n}\n/**\n * Gets all the values for the given keys in the given item and returns an array of those values\n * @param item - the item from which the values will be retrieved\n * @param keys - the keys to use to retrieve the values\n * @return objects with {itemValue, attributes}\n */\n\n\nfunction getAllValuesToRank(item, keys) {\n  var allValues = [];\n\n  for (var j = 0, J = keys.length; j < J; j++) {\n    var key = keys[j];\n    var attributes = getKeyAttributes(key);\n    var itemValues = getItemValues(item, key);\n\n    for (var i = 0, I = itemValues.length; i < I; i++) {\n      allValues.push({\n        itemValue: itemValues[i],\n        attributes: attributes\n      });\n    }\n  }\n\n  return allValues;\n}\n\nvar defaultKeyAttributes = {\n  maxRanking: Infinity,\n  minRanking: -Infinity\n};\n/**\n * Gets all the attributes for the given key\n * @param key - the key from which the attributes will be retrieved\n * @return object containing the key's attributes\n */\n\nfunction getKeyAttributes(key) {\n  if (typeof key === 'string') {\n    return defaultKeyAttributes;\n  }\n\n  return _extends({}, defaultKeyAttributes, key);\n}\n/*\neslint\n  no-continue: \"off\",\n*/\n\nexport { defaultBaseSortFn, matchSorter, rankings };\n","import React from 'react'\n\nlet renderErr = 'Renderer Error ☝️'\n\nexport const actions = {\n  init: 'init',\n}\n\nexport const defaultRenderer = ({ value = '' }) => value;\nexport const emptyRenderer = () => <>&nbsp;</>;\n\nexport const defaultColumn = {\n  Cell: defaultRenderer,\n  width: 150,\n  minWidth: 0,\n  maxWidth: Number.MAX_SAFE_INTEGER,\n}\n\nfunction mergeProps(...propList) {\n  return propList.reduce((props, next) => {\n    const { style, className, ...rest } = next\n\n    props = {\n      ...props,\n      ...rest,\n    }\n\n    if (style) {\n      props.style = props.style\n        ? { ...(props.style || {}), ...(style || {}) }\n        : style\n    }\n\n    if (className) {\n      props.className = props.className\n        ? props.className + ' ' + className\n        : className\n    }\n\n    if (props.className === '') {\n      delete props.className\n    }\n\n    return props\n  }, {})\n}\n\nfunction handlePropGetter(prevProps, userProps, meta) {\n  // Handle a lambda, pass it the previous props\n  if (typeof userProps === 'function') {\n    return handlePropGetter({}, userProps(prevProps, meta))\n  }\n\n  // Handle an array, merge each item as separate props\n  if (Array.isArray(userProps)) {\n    return mergeProps(prevProps, ...userProps)\n  }\n\n  // Handle an object by default, merge the two objects\n  return mergeProps(prevProps, userProps)\n}\n\nexport const makePropGetter = (hooks, meta = {}) => {\n  return (userProps = {}) =>\n    [...hooks, userProps].reduce(\n      (prev, next) =>\n        handlePropGetter(prev, next, {\n          ...meta,\n          userProps,\n        }),\n      {}\n    )\n}\n\nexport const reduceHooks = (hooks, initial, meta = {}, allowUndefined) =>\n  hooks.reduce((prev, next) => {\n    const nextValue = next(prev, meta)\n    if (process.env.NODE_ENV !== 'production') {\n      if (!allowUndefined && typeof nextValue === 'undefined') {\n        console.info(next)\n        throw new Error(\n          'React Table: A reducer hook ☝️ just returned undefined! This is not allowed.'\n        )\n      }\n    }\n    return nextValue\n  }, initial)\n\nexport const loopHooks = (hooks, context, meta = {}) =>\n  hooks.forEach(hook => {\n    const nextValue = hook(context, meta)\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof nextValue !== 'undefined') {\n        console.info(hook, nextValue)\n        throw new Error(\n          'React Table: A loop-type hook ☝️ just returned a value! This is not allowed.'\n        )\n      }\n    }\n  })\n\nexport function ensurePluginOrder(plugins, befores, pluginName, afters) {\n  if (process.env.NODE_ENV !== 'production' && afters) {\n    throw new Error(\n      `Defining plugins in the \"after\" section of ensurePluginOrder is no longer supported (see plugin ${pluginName})`\n    )\n  }\n  const pluginIndex = plugins.findIndex(\n    plugin => plugin.pluginName === pluginName\n  )\n\n  if (pluginIndex === -1) {\n    if (process.env.NODE_ENV !== 'production') {\n      throw new Error(`The plugin \"${pluginName}\" was not found in the plugin list!\nThis usually means you need to need to name your plugin hook by setting the 'pluginName' property of the hook function, eg:\n\n  ${pluginName}.pluginName = '${pluginName}'\n`)\n    }\n  }\n\n  befores.forEach(before => {\n    const beforeIndex = plugins.findIndex(\n      plugin => plugin.pluginName === before\n    )\n    if (beforeIndex > -1 && beforeIndex > pluginIndex) {\n      if (process.env.NODE_ENV !== 'production') {\n        throw new Error(\n          `React Table: The ${pluginName} plugin hook must be placed after the ${before} plugin hook!`\n        )\n      }\n    }\n  })\n}\n\nexport function functionalUpdate(updater, old) {\n  return typeof updater === 'function' ? updater(old) : updater\n}\n\nexport function useGetLatest(obj) {\n  const ref = React.useRef()\n  ref.current = obj\n\n  return React.useCallback(() => ref.current, [])\n}\n\n// SSR has issues with useLayoutEffect still, so use useEffect during SSR\nexport const safeUseLayoutEffect =\n  typeof document !== 'undefined' ? React.useLayoutEffect : React.useEffect\n\nexport function useMountedLayoutEffect(fn, deps) {\n  const mountedRef = React.useRef(false)\n\n  safeUseLayoutEffect(() => {\n    if (mountedRef.current) {\n      fn()\n    }\n    mountedRef.current = true\n    // eslint-disable-next-line\n  }, deps)\n}\n\nexport function useAsyncDebounce(defaultFn, defaultWait = 0) {\n  const debounceRef = React.useRef({})\n\n  const getDefaultFn = useGetLatest(defaultFn)\n  const getDefaultWait = useGetLatest(defaultWait)\n\n  return React.useCallback(\n    async (...args) => {\n      if (!debounceRef.current.promise) {\n        debounceRef.current.promise = new Promise((resolve, reject) => {\n          debounceRef.current.resolve = resolve\n          debounceRef.current.reject = reject\n        })\n      }\n\n      if (debounceRef.current.timeout) {\n        clearTimeout(debounceRef.current.timeout)\n      }\n\n      debounceRef.current.timeout = setTimeout(async () => {\n        delete debounceRef.current.timeout\n        try {\n          debounceRef.current.resolve(await getDefaultFn()(...args))\n        } catch (err) {\n          debounceRef.current.reject(err)\n        } finally {\n          delete debounceRef.current.promise\n        }\n      }, getDefaultWait())\n\n      return debounceRef.current.promise\n    },\n    [getDefaultFn, getDefaultWait]\n  )\n}\n\nexport function makeRenderer(instance, column, meta = {}) {\n  return (type, userProps = {}) => {\n    const Comp = typeof type === 'string' ? column[type] : type\n\n    if (typeof Comp === 'undefined') {\n      console.info(column)\n      throw new Error(renderErr)\n    }\n\n    return flexRender(Comp, { ...instance, column, ...meta, ...userProps })\n  }\n}\n\nexport function flexRender(Comp, props) {\n  return isReactComponent(Comp) ? <Comp {...props} /> : Comp\n}\n\nfunction isReactComponent(component) {\n  return (\n    isClassComponent(component) ||\n    typeof component === 'function' ||\n    isExoticComponent(component)\n  )\n}\n\nfunction isClassComponent(component) {\n  return (\n    typeof component === 'function' &&\n    (() => {\n      const proto = Object.getPrototypeOf(component)\n      return proto.prototype && proto.prototype.isReactComponent\n    })()\n  )\n}\n\nfunction isExoticComponent(component) {\n  return (\n    typeof component === 'object' &&\n    typeof component.$$typeof === 'symbol' &&\n    ['react.memo', 'react.forward_ref'].includes(component.$$typeof.description)\n  )\n}\n","import { defaultColumn, emptyRenderer } from './publicUtils'\n\n// Find the depth of the columns\nexport function findMaxDepth(columns, depth = 0) {\n  return columns.reduce((prev, curr) => {\n    if (curr.columns) {\n      return Math.max(prev, findMaxDepth(curr.columns, depth + 1))\n    }\n    return depth\n  }, 0)\n}\n\n// Build the visible columns, headers and flat column list\nexport function linkColumnStructure(columns, parent, depth = 0) {\n  return columns.map(column => {\n    column = {\n      ...column,\n      parent,\n      depth,\n    }\n\n    assignColumnAccessor(column)\n\n    if (column.columns) {\n      column.columns = linkColumnStructure(column.columns, column, depth + 1)\n    }\n    return column\n  })\n}\n\nexport function flattenColumns(columns) {\n  return flattenBy(columns, 'columns')\n}\n\nexport function assignColumnAccessor(column) {\n  // First check for string accessor\n  let { id, accessor, Header } = column\n\n  if (typeof accessor === 'string') {\n    id = id || accessor\n    const accessorPath = accessor.split('.')\n    accessor = row => getBy(row, accessorPath)\n  }\n\n  if (!id && typeof Header === 'string' && Header) {\n    id = Header\n  }\n\n  if (!id && column.columns) {\n    console.error(column)\n    throw new Error('A column ID (or unique \"Header\" value) is required!')\n  }\n\n  if (!id) {\n    console.error(column)\n    throw new Error('A column ID (or string accessor) is required!')\n  }\n\n  Object.assign(column, {\n    id,\n    accessor,\n  })\n\n  return column\n}\n\nexport function decorateColumn(column, userDefaultColumn) {\n  if (!userDefaultColumn) {\n    throw new Error()\n  }\n  Object.assign(column, {\n    // Make sure there is a fallback header, just in case\n    Header: emptyRenderer,\n    Footer: emptyRenderer,\n    ...defaultColumn,\n    ...userDefaultColumn,\n    ...column,\n  })\n\n  Object.assign(column, {\n    originalWidth: column.width,\n  })\n\n  return column\n}\n\n// Build the header groups from the bottom up\nexport function makeHeaderGroups(\n  allColumns,\n  defaultColumn,\n  additionalHeaderProperties = () => ({})\n) {\n  const headerGroups = []\n\n  let scanColumns = allColumns\n\n  let uid = 0\n  const getUID = () => uid++\n\n  while (scanColumns.length) {\n    // The header group we are creating\n    const headerGroup = {\n      headers: [],\n    }\n\n    // The parent columns we're going to scan next\n    const parentColumns = []\n\n    const hasParents = scanColumns.some(d => d.parent)\n\n    // Scan each column for parents\n    scanColumns.forEach(column => {\n      // What is the latest (last) parent column?\n      let latestParentColumn = [...parentColumns].reverse()[0]\n\n      let newParent\n\n      if (hasParents) {\n        // If the column has a parent, add it if necessary\n        if (column.parent) {\n          newParent = {\n            ...column.parent,\n            originalId: column.parent.id,\n            id: `${column.parent.id}_${getUID()}`,\n            headers: [column],\n            ...additionalHeaderProperties(column),\n          }\n        } else {\n          // If other columns have parents, we'll need to add a place holder if necessary\n          const originalId = `${column.id}_placeholder`\n          newParent = decorateColumn(\n            {\n              originalId,\n              id: `${column.id}_placeholder_${getUID()}`,\n              placeholderOf: column,\n              headers: [column],\n              ...additionalHeaderProperties(column),\n            },\n            defaultColumn\n          )\n        }\n\n        // If the resulting parent columns are the same, just add\n        // the column and increment the header span\n        if (\n          latestParentColumn &&\n          latestParentColumn.originalId === newParent.originalId\n        ) {\n          latestParentColumn.headers.push(column)\n        } else {\n          parentColumns.push(newParent)\n        }\n      }\n\n      headerGroup.headers.push(column)\n    })\n\n    headerGroups.push(headerGroup)\n\n    // Start scanning the parent columns\n    scanColumns = parentColumns\n  }\n\n  return headerGroups.reverse()\n}\n\nconst pathObjCache = new Map()\n\nexport function getBy(obj, path, def) {\n  if (!path) {\n    return obj\n  }\n  const cacheKey = typeof path === 'function' ? path : JSON.stringify(path)\n\n  const pathObj =\n    pathObjCache.get(cacheKey) ||\n    (() => {\n      const pathObj = makePathArray(path)\n      pathObjCache.set(cacheKey, pathObj)\n      return pathObj\n    })()\n\n  let val\n\n  try {\n    val = pathObj.reduce((cursor, pathPart) => cursor[pathPart], obj)\n  } catch (e) {\n    // continue regardless of error\n  }\n  return typeof val !== 'undefined' ? val : def\n}\n\nexport function getFirstDefined(...args) {\n  for (let i = 0; i < args.length; i += 1) {\n    if (typeof args[i] !== 'undefined') {\n      return args[i]\n    }\n  }\n}\n\nexport function getElementDimensions(element) {\n  const rect = element.getBoundingClientRect()\n  const style = window.getComputedStyle(element)\n  const margins = {\n    left: parseInt(style.marginLeft),\n    right: parseInt(style.marginRight),\n  }\n  const padding = {\n    left: parseInt(style.paddingLeft),\n    right: parseInt(style.paddingRight),\n  }\n  return {\n    left: Math.ceil(rect.left),\n    width: Math.ceil(rect.width),\n    outerWidth: Math.ceil(\n      rect.width + margins.left + margins.right + padding.left + padding.right\n    ),\n    marginLeft: margins.left,\n    marginRight: margins.right,\n    paddingLeft: padding.left,\n    paddingRight: padding.right,\n    scrollWidth: element.scrollWidth,\n  }\n}\n\nexport function isFunction(a) {\n  if (typeof a === 'function') {\n    return a\n  }\n}\n\nexport function flattenBy(arr, key) {\n  const flat = []\n\n  const recurse = arr => {\n    arr.forEach(d => {\n      if (!d[key]) {\n        flat.push(d)\n      } else {\n        recurse(d[key])\n      }\n    })\n  }\n\n  recurse(arr)\n\n  return flat\n}\n\nexport function expandRows(\n  rows,\n  { manualExpandedKey, expanded, expandSubRows = true }\n) {\n  const expandedRows = []\n\n  const handleRow = (row, addToExpandedRows = true) => {\n    row.isExpanded =\n      (row.original && row.original[manualExpandedKey]) || expanded[row.id]\n\n    row.canExpand = row.subRows && !!row.subRows.length\n\n    if (addToExpandedRows) {\n      expandedRows.push(row)\n    }\n\n    if (row.subRows && row.subRows.length && row.isExpanded) {\n      row.subRows.forEach(row => handleRow(row, expandSubRows))\n    }\n  }\n\n  rows.forEach(row => handleRow(row))\n\n  return expandedRows\n}\n\nexport function getFilterMethod(filter, userFilterTypes, filterTypes) {\n  return (\n    isFunction(filter) ||\n    userFilterTypes[filter] ||\n    filterTypes[filter] ||\n    filterTypes.text\n  )\n}\n\nexport function shouldAutoRemoveFilter(autoRemove, value, column) {\n  return autoRemove ? autoRemove(value, column) : typeof value === 'undefined'\n}\n\nexport function unpreparedAccessWarning() {\n  throw new Error(\n    'React-Table: You have not called prepareRow(row) one or more rows you are attempting to render.'\n  )\n}\n\nlet passiveSupported = null\nexport function passiveEventSupported() {\n  // memoize support to avoid adding multiple test events\n  if (typeof passiveSupported === 'boolean') return passiveSupported\n\n  let supported = false\n  try {\n    const options = {\n      get passive() {\n        supported = true\n        return false\n      },\n    }\n\n    window.addEventListener('test', null, options)\n    window.removeEventListener('test', null, options)\n  } catch (err) {\n    supported = false\n  }\n  passiveSupported = supported\n  return passiveSupported\n}\n\n//\n\nconst reOpenBracket = /\\[/g\nconst reCloseBracket = /\\]/g\n\nfunction makePathArray(obj) {\n  return (\n    flattenDeep(obj)\n      // remove all periods in parts\n      .map(d => String(d).replace('.', '_'))\n      // join parts using period\n      .join('.')\n      // replace brackets with periods\n      .replace(reOpenBracket, '.')\n      .replace(reCloseBracket, '')\n      // split it back out on periods\n      .split('.')\n  )\n}\n\nfunction flattenDeep(arr, newArr = []) {\n  if (!Array.isArray(arr)) {\n    newArr.push(arr)\n  } else {\n    for (let i = 0; i < arr.length; i += 1) {\n      flattenDeep(arr[i], newArr)\n    }\n  }\n  return newArr\n}\n","const defaultGetTableProps = props => ({\n  role: 'table',\n  ...props,\n})\n\nconst defaultGetTableBodyProps = props => ({\n  role: 'rowgroup',\n  ...props,\n})\n\nconst defaultGetHeaderProps = (props, { column }) => ({\n  key: `header_${column.id}`,\n  colSpan: column.totalVisibleHeaderCount,\n  role: 'columnheader',\n  ...props,\n})\n\nconst defaultGetFooterProps = (props, { column }) => ({\n  key: `footer_${column.id}`,\n  colSpan: column.totalVisibleHeaderCount,\n  ...props,\n})\n\nconst defaultGetHeaderGroupProps = (props, { index }) => ({\n  key: `headerGroup_${index}`,\n  role: 'row',\n  ...props,\n})\n\nconst defaultGetFooterGroupProps = (props, { index }) => ({\n  key: `footerGroup_${index}`,\n  ...props,\n})\n\nconst defaultGetRowProps = (props, { row }) => ({\n  key: `row_${row.id}`,\n  role: 'row',\n  ...props,\n})\n\nconst defaultGetCellProps = (props, { cell }) => ({\n  key: `cell_${cell.row.id}_${cell.column.id}`,\n  role: 'cell',\n  ...props,\n})\n\nexport default function makeDefaultPluginHooks() {\n  return {\n    useOptions: [],\n    stateReducers: [],\n    useControlledState: [],\n    columns: [],\n    columnsDeps: [],\n    allColumns: [],\n    allColumnsDeps: [],\n    accessValue: [],\n    materializedColumns: [],\n    materializedColumnsDeps: [],\n    useInstanceAfterData: [],\n    visibleColumns: [],\n    visibleColumnsDeps: [],\n    headerGroups: [],\n    headerGroupsDeps: [],\n    useInstanceBeforeDimensions: [],\n    useInstance: [],\n    prepareRow: [],\n    getTableProps: [defaultGetTableProps],\n    getTableBodyProps: [defaultGetTableBodyProps],\n    getHeaderGroupProps: [defaultGetHeaderGroupProps],\n    getFooterGroupProps: [defaultGetFooterGroupProps],\n    getHeaderProps: [defaultGetHeaderProps],\n    getFooterProps: [defaultGetFooterProps],\n    getRowProps: [defaultGetRowProps],\n    getCellProps: [defaultGetCellProps],\n    useFinalInstance: [],\n  }\n}\n","import React from 'react'\n\nimport {\n  actions,\n  functionalUpdate,\n  useGetLatest,\n  makePropGetter,\n  useMountedLayoutEffect,\n} from '../publicUtils'\n\nactions.resetHiddenColumns = 'resetHiddenColumns'\nactions.toggleHideColumn = 'toggleHideColumn'\nactions.setHiddenColumns = 'setHiddenColumns'\nactions.toggleHideAllColumns = 'toggleHideAllColumns'\n\nexport const useColumnVisibility = hooks => {\n  hooks.getToggleHiddenProps = [defaultGetToggleHiddenProps]\n  hooks.getToggleHideAllColumnsProps = [defaultGetToggleHideAllColumnsProps]\n\n  hooks.stateReducers.push(reducer)\n  hooks.useInstanceBeforeDimensions.push(useInstanceBeforeDimensions)\n  hooks.headerGroupsDeps.push((deps, { instance }) => [\n    ...deps,\n    instance.state.hiddenColumns,\n  ])\n  hooks.useInstance.push(useInstance)\n}\n\nuseColumnVisibility.pluginName = 'useColumnVisibility'\n\nconst defaultGetToggleHiddenProps = (props, { column }) => [\n  props,\n  {\n    onChange: e => {\n      column.toggleHidden(!e.target.checked)\n    },\n    style: {\n      cursor: 'pointer',\n    },\n    checked: column.isVisible,\n    title: 'Toggle Column Visible',\n  },\n]\n\nconst defaultGetToggleHideAllColumnsProps = (props, { instance }) => [\n  props,\n  {\n    onChange: e => {\n      instance.toggleHideAllColumns(!e.target.checked)\n    },\n    style: {\n      cursor: 'pointer',\n    },\n    checked: !instance.allColumnsHidden && !instance.state.hiddenColumns.length,\n    title: 'Toggle All Columns Hidden',\n    indeterminate:\n      !instance.allColumnsHidden && instance.state.hiddenColumns.length,\n  },\n]\n\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      hiddenColumns: [],\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetHiddenColumns) {\n    return {\n      ...state,\n      hiddenColumns: instance.initialState.hiddenColumns || [],\n    }\n  }\n\n  if (action.type === actions.toggleHideColumn) {\n    const should =\n      typeof action.value !== 'undefined'\n        ? action.value\n        : !state.hiddenColumns.includes(action.columnId)\n\n    const hiddenColumns = should\n      ? [...state.hiddenColumns, action.columnId]\n      : state.hiddenColumns.filter(d => d !== action.columnId)\n\n    return {\n      ...state,\n      hiddenColumns,\n    }\n  }\n\n  if (action.type === actions.setHiddenColumns) {\n    return {\n      ...state,\n      hiddenColumns: functionalUpdate(action.value, state.hiddenColumns),\n    }\n  }\n\n  if (action.type === actions.toggleHideAllColumns) {\n    const shouldAll =\n      typeof action.value !== 'undefined'\n        ? action.value\n        : !state.hiddenColumns.length\n\n    return {\n      ...state,\n      hiddenColumns: shouldAll ? instance.allColumns.map(d => d.id) : [],\n    }\n  }\n}\n\nfunction useInstanceBeforeDimensions(instance) {\n  const {\n    headers,\n    state: { hiddenColumns },\n  } = instance\n\n  const isMountedRef = React.useRef(false)\n\n  if (!isMountedRef.current) {\n  }\n\n  const handleColumn = (column, parentVisible) => {\n    column.isVisible = parentVisible && !hiddenColumns.includes(column.id)\n\n    let totalVisibleHeaderCount = 0\n\n    if (column.headers && column.headers.length) {\n      column.headers.forEach(\n        subColumn =>\n          (totalVisibleHeaderCount += handleColumn(subColumn, column.isVisible))\n      )\n    } else {\n      totalVisibleHeaderCount = column.isVisible ? 1 : 0\n    }\n\n    column.totalVisibleHeaderCount = totalVisibleHeaderCount\n\n    return totalVisibleHeaderCount\n  }\n\n  let totalVisibleHeaderCount = 0\n\n  headers.forEach(\n    subHeader => (totalVisibleHeaderCount += handleColumn(subHeader, true))\n  )\n}\n\nfunction useInstance(instance) {\n  const {\n    columns,\n    flatHeaders,\n    dispatch,\n    allColumns,\n    getHooks,\n    state: { hiddenColumns },\n    autoResetHiddenColumns = true,\n  } = instance\n\n  const getInstance = useGetLatest(instance)\n\n  const allColumnsHidden = allColumns.length === hiddenColumns.length\n\n  const toggleHideColumn = React.useCallback(\n    (columnId, value) =>\n      dispatch({ type: actions.toggleHideColumn, columnId, value }),\n    [dispatch]\n  )\n\n  const setHiddenColumns = React.useCallback(\n    value => dispatch({ type: actions.setHiddenColumns, value }),\n    [dispatch]\n  )\n\n  const toggleHideAllColumns = React.useCallback(\n    value => dispatch({ type: actions.toggleHideAllColumns, value }),\n    [dispatch]\n  )\n\n  const getToggleHideAllColumnsProps = makePropGetter(\n    getHooks().getToggleHideAllColumnsProps,\n    { instance: getInstance() }\n  )\n\n  flatHeaders.forEach(column => {\n    column.toggleHidden = value => {\n      dispatch({\n        type: actions.toggleHideColumn,\n        columnId: column.id,\n        value,\n      })\n    }\n\n    column.getToggleHiddenProps = makePropGetter(\n      getHooks().getToggleHiddenProps,\n      {\n        instance: getInstance(),\n        column,\n      }\n    )\n  })\n\n  const getAutoResetHiddenColumns = useGetLatest(autoResetHiddenColumns)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetHiddenColumns()) {\n      dispatch({ type: actions.resetHiddenColumns })\n    }\n  }, [dispatch, columns])\n\n  Object.assign(instance, {\n    allColumnsHidden,\n    toggleHideColumn,\n    setHiddenColumns,\n    toggleHideAllColumns,\n    getToggleHideAllColumnsProps,\n  })\n}\n","import React from 'react'\n\n//\n\nimport {\n  linkColumnStructure,\n  flattenColumns,\n  assignColumnAccessor,\n  unpreparedAccessWarning,\n  makeHeaderGroups,\n  decorateColumn,\n} from '../utils'\n\nimport {\n  useGetLatest,\n  reduceHooks,\n  actions,\n  loopHooks,\n  makePropGetter,\n  makeRenderer,\n} from '../publicUtils'\n\nimport makeDefaultPluginHooks from '../makeDefaultPluginHooks'\n\nimport { useColumnVisibility } from './useColumnVisibility'\n\nconst defaultInitialState = {}\nconst defaultColumnInstance = {}\nconst defaultReducer = (state, action, prevState) => state\nconst defaultGetSubRows = (row, index) => row.subRows || []\nconst defaultGetRowId = (row, index, parent) =>\n  `${parent ? [parent.id, index].join('.') : index}`\nconst defaultUseControlledState = d => d\n\nfunction applyDefaults(props) {\n  const {\n    initialState = defaultInitialState,\n    defaultColumn = defaultColumnInstance,\n    getSubRows = defaultGetSubRows,\n    getRowId = defaultGetRowId,\n    stateReducer = defaultReducer,\n    useControlledState = defaultUseControlledState,\n    ...rest\n  } = props\n\n  return {\n    ...rest,\n    initialState,\n    defaultColumn,\n    getSubRows,\n    getRowId,\n    stateReducer,\n    useControlledState,\n  }\n}\n\nexport const useTable = (props, ...plugins) => {\n  // Apply default props\n  props = applyDefaults(props)\n\n  // Add core plugins\n  plugins = [useColumnVisibility, ...plugins]\n\n  // Create the table instance\n  let instanceRef = React.useRef({})\n\n  // Create a getter for the instance (helps avoid a lot of potential memory leaks)\n  const getInstance = useGetLatest(instanceRef.current)\n\n  // Assign the props, plugins and hooks to the instance\n  Object.assign(getInstance(), {\n    ...props,\n    plugins,\n    hooks: makeDefaultPluginHooks(),\n  })\n\n  // Allow plugins to register hooks as early as possible\n  plugins.filter(Boolean).forEach(plugin => {\n    plugin(getInstance().hooks)\n  })\n\n  // Consume all hooks and make a getter for them\n  const getHooks = useGetLatest(getInstance().hooks)\n  getInstance().getHooks = getHooks\n  delete getInstance().hooks\n\n  // Allow useOptions hooks to modify the options coming into the table\n  Object.assign(\n    getInstance(),\n    reduceHooks(getHooks().useOptions, applyDefaults(props))\n  )\n\n  const {\n    data,\n    columns: userColumns,\n    initialState,\n    defaultColumn,\n    getSubRows,\n    getRowId,\n    stateReducer,\n    useControlledState,\n  } = getInstance()\n\n  // Setup user reducer ref\n  const getStateReducer = useGetLatest(stateReducer)\n\n  // Build the reducer\n  const reducer = React.useCallback(\n    (state, action) => {\n      // Detect invalid actions\n      if (!action.type) {\n        console.info({ action })\n        throw new Error('Unknown Action 👆')\n      }\n\n      // Reduce the state from all plugin reducers\n      return [\n        ...getHooks().stateReducers,\n        // Allow the user to add their own state reducer(s)\n        ...(Array.isArray(getStateReducer())\n          ? getStateReducer()\n          : [getStateReducer()]),\n      ].reduce(\n        (s, handler) => handler(s, action, state, getInstance()) || s,\n        state\n      )\n    },\n    [getHooks, getStateReducer, getInstance]\n  )\n\n  // Start the reducer\n  const [reducerState, dispatch] = React.useReducer(reducer, undefined, () =>\n    reducer(initialState, { type: actions.init })\n  )\n\n  // Allow the user to control the final state with hooks\n  const state = reduceHooks(\n    [...getHooks().useControlledState, useControlledState],\n    reducerState,\n    { instance: getInstance() }\n  )\n\n  Object.assign(getInstance(), {\n    state,\n    dispatch,\n  })\n\n  // Decorate All the columns\n  const columns = React.useMemo(\n    () =>\n      linkColumnStructure(\n        reduceHooks(getHooks().columns, userColumns, {\n          instance: getInstance(),\n        })\n      ),\n    [\n      getHooks,\n      getInstance,\n      userColumns,\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      ...reduceHooks(getHooks().columnsDeps, [], { instance: getInstance() }),\n    ]\n  )\n  getInstance().columns = columns\n\n  // Get the flat list of all columns and allow hooks to decorate\n  // those columns (and trigger this memoization via deps)\n  let allColumns = React.useMemo(\n    () =>\n      reduceHooks(getHooks().allColumns, flattenColumns(columns), {\n        instance: getInstance(),\n      }).map(assignColumnAccessor),\n    [\n      columns,\n      getHooks,\n      getInstance,\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      ...reduceHooks(getHooks().allColumnsDeps, [], {\n        instance: getInstance(),\n      }),\n    ]\n  )\n  getInstance().allColumns = allColumns\n\n  // Access the row model using initial columns\n  const [rows, flatRows, rowsById] = React.useMemo(() => {\n    let rows = []\n    let flatRows = []\n    const rowsById = {}\n\n    const allColumnsQueue = [...allColumns]\n\n    while (allColumnsQueue.length) {\n      const column = allColumnsQueue.shift()\n      accessRowsForColumn({\n        data,\n        rows,\n        flatRows,\n        rowsById,\n        column,\n        getRowId,\n        getSubRows,\n        accessValueHooks: getHooks().accessValue,\n        getInstance,\n      })\n    }\n\n    return [rows, flatRows, rowsById]\n  }, [allColumns, data, getRowId, getSubRows, getHooks, getInstance])\n\n  Object.assign(getInstance(), {\n    rows,\n    initialRows: [...rows],\n    flatRows,\n    rowsById,\n    // materializedColumns,\n  })\n\n  loopHooks(getHooks().useInstanceAfterData, getInstance())\n\n  // Get the flat list of all columns AFTER the rows\n  // have been access, and allow hooks to decorate\n  // those columns (and trigger this memoization via deps)\n  let visibleColumns = React.useMemo(\n    () =>\n      reduceHooks(getHooks().visibleColumns, allColumns, {\n        instance: getInstance(),\n      }).map(d => decorateColumn(d, defaultColumn)),\n    [\n      getHooks,\n      allColumns,\n      getInstance,\n      defaultColumn,\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      ...reduceHooks(getHooks().visibleColumnsDeps, [], {\n        instance: getInstance(),\n      }),\n    ]\n  )\n\n  // Combine new visible columns with all columns\n  allColumns = React.useMemo(() => {\n    const columns = [...visibleColumns]\n\n    allColumns.forEach(column => {\n      if (!columns.find(d => d.id === column.id)) {\n        columns.push(column)\n      }\n    })\n\n    return columns\n  }, [allColumns, visibleColumns])\n  getInstance().allColumns = allColumns\n\n  if (process.env.NODE_ENV !== 'production') {\n    const duplicateColumns = allColumns.filter((column, i) => {\n      return allColumns.findIndex(d => d.id === column.id) !== i\n    })\n\n    if (duplicateColumns.length) {\n      console.info(allColumns)\n      throw new Error(\n        `Duplicate columns were found with ids: \"${duplicateColumns\n          .map(d => d.id)\n          .join(', ')}\" in the columns array above`\n      )\n    }\n  }\n\n  // Make the headerGroups\n  const headerGroups = React.useMemo(\n    () =>\n      reduceHooks(\n        getHooks().headerGroups,\n        makeHeaderGroups(visibleColumns, defaultColumn),\n        getInstance()\n      ),\n    [\n      getHooks,\n      visibleColumns,\n      defaultColumn,\n      getInstance,\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      ...reduceHooks(getHooks().headerGroupsDeps, [], {\n        instance: getInstance(),\n      }),\n    ]\n  )\n  getInstance().headerGroups = headerGroups\n\n  // Get the first level of headers\n  const headers = React.useMemo(\n    () => (headerGroups.length ? headerGroups[0].headers : []),\n    [headerGroups]\n  )\n  getInstance().headers = headers\n\n  // Provide a flat header list for utilities\n  getInstance().flatHeaders = headerGroups.reduce(\n    (all, headerGroup) => [...all, ...headerGroup.headers],\n    []\n  )\n\n  loopHooks(getHooks().useInstanceBeforeDimensions, getInstance())\n\n  // Filter columns down to visible ones\n  const visibleColumnsDep = visibleColumns\n    .filter(d => d.isVisible)\n    .map(d => d.id)\n    .sort()\n    .join('_')\n\n  visibleColumns = React.useMemo(\n    () => visibleColumns.filter(d => d.isVisible),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [visibleColumns, visibleColumnsDep]\n  )\n  getInstance().visibleColumns = visibleColumns\n\n  // Header Visibility is needed by this point\n  const [\n    totalColumnsMinWidth,\n    totalColumnsWidth,\n    totalColumnsMaxWidth,\n  ] = calculateHeaderWidths(headers)\n\n  getInstance().totalColumnsMinWidth = totalColumnsMinWidth\n  getInstance().totalColumnsWidth = totalColumnsWidth\n  getInstance().totalColumnsMaxWidth = totalColumnsMaxWidth\n\n  loopHooks(getHooks().useInstance, getInstance())\n\n  // Each materialized header needs to be assigned a render function and other\n  // prop getter properties here.\n  ;[...getInstance().flatHeaders, ...getInstance().allColumns].forEach(\n    column => {\n      // Give columns/headers rendering power\n      column.render = makeRenderer(getInstance(), column)\n\n      // Give columns/headers a default getHeaderProps\n      column.getHeaderProps = makePropGetter(getHooks().getHeaderProps, {\n        instance: getInstance(),\n        column,\n      })\n\n      // Give columns/headers a default getFooterProps\n      column.getFooterProps = makePropGetter(getHooks().getFooterProps, {\n        instance: getInstance(),\n        column,\n      })\n    }\n  )\n\n  getInstance().headerGroups = React.useMemo(\n    () =>\n      headerGroups.filter((headerGroup, i) => {\n        // Filter out any headers and headerGroups that don't have visible columns\n        headerGroup.headers = headerGroup.headers.filter(column => {\n          const recurse = headers =>\n            headers.filter(column => {\n              if (column.headers) {\n                return recurse(column.headers)\n              }\n              return column.isVisible\n            }).length\n          if (column.headers) {\n            return recurse(column.headers)\n          }\n          return column.isVisible\n        })\n\n        // Give headerGroups getRowProps\n        if (headerGroup.headers.length) {\n          headerGroup.getHeaderGroupProps = makePropGetter(\n            getHooks().getHeaderGroupProps,\n            { instance: getInstance(), headerGroup, index: i }\n          )\n\n          headerGroup.getFooterGroupProps = makePropGetter(\n            getHooks().getFooterGroupProps,\n            { instance: getInstance(), headerGroup, index: i }\n          )\n\n          return true\n        }\n\n        return false\n      }),\n    [headerGroups, getInstance, getHooks]\n  )\n\n  getInstance().footerGroups = [...getInstance().headerGroups].reverse()\n\n  // The prepareRow function is absolutely necessary and MUST be called on\n  // any rows the user wishes to be displayed.\n\n  getInstance().prepareRow = React.useCallback(\n    row => {\n      row.getRowProps = makePropGetter(getHooks().getRowProps, {\n        instance: getInstance(),\n        row,\n      })\n\n      // Build the visible cells for each row\n      row.allCells = allColumns.map(column => {\n        const value = row.values[column.id]\n\n        const cell = {\n          column,\n          row,\n          value,\n        }\n\n        // Give each cell a getCellProps base\n        cell.getCellProps = makePropGetter(getHooks().getCellProps, {\n          instance: getInstance(),\n          cell,\n        })\n\n        // Give each cell a renderer function (supports multiple renderers)\n        cell.render = makeRenderer(getInstance(), column, {\n          row,\n          cell,\n          value,\n        })\n\n        return cell\n      })\n\n      row.cells = visibleColumns.map(column =>\n        row.allCells.find(cell => cell.column.id === column.id)\n      )\n\n      // need to apply any row specific hooks (useExpanded requires this)\n      loopHooks(getHooks().prepareRow, row, { instance: getInstance() })\n    },\n    [getHooks, getInstance, allColumns, visibleColumns]\n  )\n\n  getInstance().getTableProps = makePropGetter(getHooks().getTableProps, {\n    instance: getInstance(),\n  })\n\n  getInstance().getTableBodyProps = makePropGetter(\n    getHooks().getTableBodyProps,\n    {\n      instance: getInstance(),\n    }\n  )\n\n  loopHooks(getHooks().useFinalInstance, getInstance())\n\n  return getInstance()\n}\n\nfunction calculateHeaderWidths(headers, left = 0) {\n  let sumTotalMinWidth = 0\n  let sumTotalWidth = 0\n  let sumTotalMaxWidth = 0\n  let sumTotalFlexWidth = 0\n\n  headers.forEach(header => {\n    let { headers: subHeaders } = header\n\n    header.totalLeft = left\n\n    if (subHeaders && subHeaders.length) {\n      const [\n        totalMinWidth,\n        totalWidth,\n        totalMaxWidth,\n        totalFlexWidth,\n      ] = calculateHeaderWidths(subHeaders, left)\n      header.totalMinWidth = totalMinWidth\n      header.totalWidth = totalWidth\n      header.totalMaxWidth = totalMaxWidth\n      header.totalFlexWidth = totalFlexWidth\n    } else {\n      header.totalMinWidth = header.minWidth\n      header.totalWidth = Math.min(\n        Math.max(header.minWidth, header.width),\n        header.maxWidth\n      )\n      header.totalMaxWidth = header.maxWidth\n      header.totalFlexWidth = header.canResize ? header.totalWidth : 0\n    }\n    if (header.isVisible) {\n      left += header.totalWidth\n      sumTotalMinWidth += header.totalMinWidth\n      sumTotalWidth += header.totalWidth\n      sumTotalMaxWidth += header.totalMaxWidth\n      sumTotalFlexWidth += header.totalFlexWidth\n    }\n  })\n\n  return [sumTotalMinWidth, sumTotalWidth, sumTotalMaxWidth, sumTotalFlexWidth]\n}\n\nfunction accessRowsForColumn({\n  data,\n  rows,\n  flatRows,\n  rowsById,\n  column,\n  getRowId,\n  getSubRows,\n  accessValueHooks,\n  getInstance,\n}) {\n  // Access the row's data column-by-column\n  // We do it this way so we can incrementally add materialized\n  // columns after the first pass and avoid excessive looping\n  const accessRow = (originalRow, rowIndex, depth = 0, parent, parentRows) => {\n    // Keep the original reference around\n    const original = originalRow\n\n    const id = getRowId(originalRow, rowIndex, parent)\n\n    let row = rowsById[id]\n\n    // If the row hasn't been created, let's make it\n    if (!row) {\n      row = {\n        id,\n        original,\n        index: rowIndex,\n        depth,\n        cells: [{}], // This is a dummy cell\n      }\n\n      // Override common array functions (and the dummy cell's getCellProps function)\n      // to show an error if it is accessed without calling prepareRow\n      row.cells.map = unpreparedAccessWarning\n      row.cells.filter = unpreparedAccessWarning\n      row.cells.forEach = unpreparedAccessWarning\n      row.cells[0].getCellProps = unpreparedAccessWarning\n\n      // Create the cells and values\n      row.values = {}\n\n      // Push this row into the parentRows array\n      parentRows.push(row)\n      // Keep track of every row in a flat array\n      flatRows.push(row)\n      // Also keep track of every row by its ID\n      rowsById[id] = row\n\n      // Get the original subrows\n      row.originalSubRows = getSubRows(originalRow, rowIndex)\n\n      // Then recursively access them\n      if (row.originalSubRows) {\n        const subRows = []\n        row.originalSubRows.forEach((d, i) =>\n          accessRow(d, i, depth + 1, row, subRows)\n        )\n        // Keep the new subRows array on the row\n        row.subRows = subRows\n      }\n    } else if (row.subRows) {\n      // If the row exists, then it's already been accessed\n      // Keep recursing, but don't worry about passing the\n      // accumlator array (those rows already exist)\n      row.originalSubRows.forEach((d, i) => accessRow(d, i, depth + 1, row))\n    }\n\n    // If the column has an accessor, use it to get a value\n    if (column.accessor) {\n      row.values[column.id] = column.accessor(\n        originalRow,\n        rowIndex,\n        row,\n        parentRows,\n        data\n      )\n    }\n\n    // Allow plugins to manipulate the column value\n    row.values[column.id] = reduceHooks(\n      accessValueHooks,\n      row.values[column.id],\n      {\n        row,\n        column,\n        instance: getInstance(),\n      },\n      true\n    )\n  }\n\n  data.forEach((originalRow, rowIndex) =>\n    accessRow(originalRow, rowIndex, 0, undefined, rows)\n  )\n}\n","import React from 'react'\n\nimport { expandRows } from '../utils'\n\nimport {\n  useGetLatest,\n  actions,\n  useMountedLayoutEffect,\n  makePropGetter,\n  ensurePluginOrder,\n} from '../publicUtils'\n\n// Actions\nactions.resetExpanded = 'resetExpanded'\nactions.toggleRowExpanded = 'toggleRowExpanded'\nactions.toggleAllRowsExpanded = 'toggleAllRowsExpanded'\n\nexport const useExpanded = hooks => {\n  hooks.getToggleAllRowsExpandedProps = [defaultGetToggleAllRowsExpandedProps]\n  hooks.getToggleRowExpandedProps = [defaultGetToggleRowExpandedProps]\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n  hooks.prepareRow.push(prepareRow)\n}\n\nuseExpanded.pluginName = 'useExpanded'\n\nconst defaultGetToggleAllRowsExpandedProps = (props, { instance }) => [\n  props,\n  {\n    onClick: e => {\n      instance.toggleAllRowsExpanded()\n    },\n    style: {\n      cursor: 'pointer',\n    },\n    title: 'Toggle All Rows Expanded',\n  },\n]\n\nconst defaultGetToggleRowExpandedProps = (props, { row }) => [\n  props,\n  {\n    onClick: () => {\n      row.toggleRowExpanded()\n    },\n    style: {\n      cursor: 'pointer',\n    },\n    title: 'Toggle Row Expanded',\n  },\n]\n\n// Reducer\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      expanded: {},\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetExpanded) {\n    return {\n      ...state,\n      expanded: instance.initialState.expanded || {},\n    }\n  }\n\n  if (action.type === actions.toggleAllRowsExpanded) {\n    const { value } = action\n    const { isAllRowsExpanded, rowsById } = instance\n\n    const expandAll = typeof value !== 'undefined' ? value : !isAllRowsExpanded\n\n    if (expandAll) {\n      const expanded = {}\n\n      Object.keys(rowsById).forEach(rowId => {\n        expanded[rowId] = true\n      })\n\n      return {\n        ...state,\n        expanded,\n      }\n    }\n\n    return {\n      ...state,\n      expanded: {},\n    }\n  }\n\n  if (action.type === actions.toggleRowExpanded) {\n    const { id, value: setExpanded } = action\n    const exists = state.expanded[id]\n\n    const shouldExist =\n      typeof setExpanded !== 'undefined' ? setExpanded : !exists\n\n    if (!exists && shouldExist) {\n      return {\n        ...state,\n        expanded: {\n          ...state.expanded,\n          [id]: true,\n        },\n      }\n    } else if (exists && !shouldExist) {\n      const { [id]: _, ...rest } = state.expanded\n      return {\n        ...state,\n        expanded: rest,\n      }\n    } else {\n      return state\n    }\n  }\n}\n\nfunction useInstance(instance) {\n  const {\n    data,\n    rows,\n    rowsById,\n    manualExpandedKey = 'expanded',\n    paginateExpandedRows = true,\n    expandSubRows = true,\n    autoResetExpanded = true,\n    getHooks,\n    plugins,\n    state: { expanded },\n    dispatch,\n  } = instance\n\n  ensurePluginOrder(\n    plugins,\n    ['useSortBy', 'useGroupBy', 'usePivotColumns', 'useGlobalFilter'],\n    'useExpanded'\n  )\n\n  const getAutoResetExpanded = useGetLatest(autoResetExpanded)\n\n  let isAllRowsExpanded = Boolean(\n    Object.keys(rowsById).length && Object.keys(expanded).length\n  )\n\n  if (isAllRowsExpanded) {\n    if (Object.keys(rowsById).some(id => !expanded[id])) {\n      isAllRowsExpanded = false\n    }\n  }\n\n  // Bypass any effects from firing when this changes\n  useMountedLayoutEffect(() => {\n    if (getAutoResetExpanded()) {\n      dispatch({ type: actions.resetExpanded })\n    }\n  }, [dispatch, data])\n\n  const toggleRowExpanded = React.useCallback(\n    (id, value) => {\n      dispatch({ type: actions.toggleRowExpanded, id, value })\n    },\n    [dispatch]\n  )\n\n  const toggleAllRowsExpanded = React.useCallback(\n    value => dispatch({ type: actions.toggleAllRowsExpanded, value }),\n    [dispatch]\n  )\n\n  const expandedRows = React.useMemo(() => {\n    if (paginateExpandedRows) {\n      return expandRows(rows, { manualExpandedKey, expanded, expandSubRows })\n    }\n\n    return rows\n  }, [paginateExpandedRows, rows, manualExpandedKey, expanded, expandSubRows])\n\n  const expandedDepth = React.useMemo(() => findExpandedDepth(expanded), [\n    expanded,\n  ])\n\n  const getInstance = useGetLatest(instance)\n\n  const getToggleAllRowsExpandedProps = makePropGetter(\n    getHooks().getToggleAllRowsExpandedProps,\n    { instance: getInstance() }\n  )\n\n  Object.assign(instance, {\n    preExpandedRows: rows,\n    expandedRows,\n    rows: expandedRows,\n    expandedDepth,\n    isAllRowsExpanded,\n    toggleRowExpanded,\n    toggleAllRowsExpanded,\n    getToggleAllRowsExpandedProps,\n  })\n}\n\nfunction prepareRow(row, { instance: { getHooks }, instance }) {\n  row.toggleRowExpanded = set => instance.toggleRowExpanded(row.id, set)\n\n  row.getToggleRowExpandedProps = makePropGetter(\n    getHooks().getToggleRowExpandedProps,\n    {\n      instance,\n      row,\n    }\n  )\n}\n\nfunction findExpandedDepth(expanded) {\n  let maxDepth = 0\n\n  Object.keys(expanded).forEach(id => {\n    const splitId = id.split('.')\n    maxDepth = Math.max(maxDepth, splitId.length)\n  })\n\n  return maxDepth\n}\n","export const text = (rows, ids, filterValue) => {\n  rows = rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return String(rowValue)\n        .toLowerCase()\n        .includes(String(filterValue).toLowerCase())\n    })\n  })\n  return rows\n}\n\ntext.autoRemove = val => !val\n\nexport const exactText = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return rowValue !== undefined\n        ? String(rowValue).toLowerCase() === String(filterValue).toLowerCase()\n        : true\n    })\n  })\n}\n\nexactText.autoRemove = val => !val\n\nexport const exactTextCase = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return rowValue !== undefined\n        ? String(rowValue) === String(filterValue)\n        : true\n    })\n  })\n}\n\nexactTextCase.autoRemove = val => !val\n\nexport const includes = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return rowValue.includes(filterValue)\n    })\n  })\n}\n\nincludes.autoRemove = val => !val || !val.length\n\nexport const includesAll = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return (\n        rowValue &&\n        rowValue.length &&\n        filterValue.every(val => rowValue.includes(val))\n      )\n    })\n  })\n}\n\nincludesAll.autoRemove = val => !val || !val.length\n\nexport const includesSome = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return (\n        rowValue &&\n        rowValue.length &&\n        filterValue.some(val => rowValue.includes(val))\n      )\n    })\n  })\n}\n\nincludesSome.autoRemove = val => !val || !val.length\n\nexport const includesValue = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return filterValue.includes(rowValue)\n    })\n  })\n}\n\nincludesValue.autoRemove = val => !val || !val.length\n\nexport const exact = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return rowValue === filterValue\n    })\n  })\n}\n\nexact.autoRemove = val => typeof val === 'undefined'\n\nexport const equals = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      // eslint-disable-next-line eqeqeq\n      return rowValue == filterValue\n    })\n  })\n}\n\nequals.autoRemove = val => val == null\n\nexport const between = (rows, ids, filterValue) => {\n  let [min, max] = filterValue || []\n\n  min = typeof min === 'number' ? min : -Infinity\n  max = typeof max === 'number' ? max : Infinity\n\n  if (min > max) {\n    const temp = min\n    min = max\n    max = temp\n  }\n\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return rowValue >= min && rowValue <= max\n    })\n  })\n}\n\nbetween.autoRemove = val =>\n  !val || (typeof val[0] !== 'number' && typeof val[1] !== 'number')\n","import React from 'react'\n\nimport {\n  getFirstDefined,\n  getFilterMethod,\n  shouldAutoRemoveFilter,\n} from '../utils'\n\nimport {\n  actions,\n  useGetLatest,\n  functionalUpdate,\n  useMountedLayoutEffect,\n} from '../publicUtils'\n\nimport * as filterTypes from '../filterTypes'\n\n// Actions\nactions.resetFilters = 'resetFilters'\nactions.setFilter = 'setFilter'\nactions.setAllFilters = 'setAllFilters'\n\nexport const useFilters = hooks => {\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n}\n\nuseFilters.pluginName = 'useFilters'\n\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      filters: [],\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetFilters) {\n    return {\n      ...state,\n      filters: instance.initialState.filters || [],\n    }\n  }\n\n  if (action.type === actions.setFilter) {\n    const { columnId, filterValue } = action\n    const { allColumns, filterTypes: userFilterTypes } = instance\n\n    const column = allColumns.find(d => d.id === columnId)\n\n    if (!column) {\n      throw new Error(\n        `React-Table: Could not find a column with id: ${columnId}`\n      )\n    }\n\n    const filterMethod = getFilterMethod(\n      column.filter,\n      userFilterTypes || {},\n      filterTypes\n    )\n\n    const previousfilter = state.filters.find(d => d.id === columnId)\n\n    const newFilter = functionalUpdate(\n      filterValue,\n      previousfilter && previousfilter.value\n    )\n\n    //\n    if (shouldAutoRemoveFilter(filterMethod.autoRemove, newFilter, column)) {\n      return {\n        ...state,\n        filters: state.filters.filter(d => d.id !== columnId),\n      }\n    }\n\n    if (previousfilter) {\n      return {\n        ...state,\n        filters: state.filters.map(d => {\n          if (d.id === columnId) {\n            return { id: columnId, value: newFilter }\n          }\n          return d\n        }),\n      }\n    }\n\n    return {\n      ...state,\n      filters: [...state.filters, { id: columnId, value: newFilter }],\n    }\n  }\n\n  if (action.type === actions.setAllFilters) {\n    const { filters } = action\n    const { allColumns, filterTypes: userFilterTypes } = instance\n\n    return {\n      ...state,\n      // Filter out undefined values\n      filters: functionalUpdate(filters, state.filters).filter(filter => {\n        const column = allColumns.find(d => d.id === filter.id)\n        const filterMethod = getFilterMethod(\n          column.filter,\n          userFilterTypes || {},\n          filterTypes\n        )\n\n        if (\n          shouldAutoRemoveFilter(filterMethod.autoRemove, filter.value, column)\n        ) {\n          return false\n        }\n        return true\n      }),\n    }\n  }\n}\n\nfunction useInstance(instance) {\n  const {\n    data,\n    rows,\n    flatRows,\n    rowsById,\n    allColumns,\n    filterTypes: userFilterTypes,\n    manualFilters,\n    defaultCanFilter = false,\n    disableFilters,\n    state: { filters },\n    dispatch,\n    autoResetFilters = true,\n  } = instance\n\n  const setFilter = React.useCallback(\n    (columnId, filterValue) => {\n      dispatch({ type: actions.setFilter, columnId, filterValue })\n    },\n    [dispatch]\n  )\n\n  const setAllFilters = React.useCallback(\n    filters => {\n      dispatch({\n        type: actions.setAllFilters,\n        filters,\n      })\n    },\n    [dispatch]\n  )\n\n  allColumns.forEach(column => {\n    const {\n      id,\n      accessor,\n      defaultCanFilter: columnDefaultCanFilter,\n      disableFilters: columnDisableFilters,\n    } = column\n\n    // Determine if a column is filterable\n    column.canFilter = accessor\n      ? getFirstDefined(\n          columnDisableFilters === true ? false : undefined,\n          disableFilters === true ? false : undefined,\n          true\n        )\n      : getFirstDefined(columnDefaultCanFilter, defaultCanFilter, false)\n\n    // Provide the column a way of updating the filter value\n    column.setFilter = val => setFilter(column.id, val)\n\n    // Provide the current filter value to the column for\n    // convenience\n    const found = filters.find(d => d.id === id)\n    column.filterValue = found && found.value\n  })\n\n  const [\n    filteredRows,\n    filteredFlatRows,\n    filteredRowsById,\n  ] = React.useMemo(() => {\n    if (manualFilters || !filters.length) {\n      return [rows, flatRows, rowsById]\n    }\n\n    const filteredFlatRows = []\n    const filteredRowsById = {}\n\n    // Filters top level and nested rows\n    const filterRows = (rows, depth = 0) => {\n      let filteredRows = rows\n\n      filteredRows = filters.reduce(\n        (filteredSoFar, { id: columnId, value: filterValue }) => {\n          // Find the filters column\n          const column = allColumns.find(d => d.id === columnId)\n\n          if (!column) {\n            return filteredSoFar\n          }\n\n          if (depth === 0) {\n            column.preFilteredRows = filteredSoFar\n          }\n\n          const filterMethod = getFilterMethod(\n            column.filter,\n            userFilterTypes || {},\n            filterTypes\n          )\n\n          if (!filterMethod) {\n            console.warn(\n              `Could not find a valid 'column.filter' for column with the ID: ${column.id}.`\n            )\n            return filteredSoFar\n          }\n\n          // Pass the rows, id, filterValue and column to the filterMethod\n          // to get the filtered rows back\n          column.filteredRows = filterMethod(\n            filteredSoFar,\n            [columnId],\n            filterValue\n          )\n\n          return column.filteredRows\n        },\n        rows\n      )\n\n      // Apply the filter to any subRows\n      // We technically could do this recursively in the above loop,\n      // but that would severely hinder the API for the user, since they\n      // would be required to do that recursion in some scenarios\n      filteredRows.forEach(row => {\n        filteredFlatRows.push(row)\n        filteredRowsById[row.id] = row\n        if (!row.subRows) {\n          return\n        }\n\n        row.subRows =\n          row.subRows && row.subRows.length > 0\n            ? filterRows(row.subRows, depth + 1)\n            : row.subRows\n      })\n\n      return filteredRows\n    }\n\n    return [filterRows(rows), filteredFlatRows, filteredRowsById]\n  }, [\n    manualFilters,\n    filters,\n    rows,\n    flatRows,\n    rowsById,\n    allColumns,\n    userFilterTypes,\n  ])\n\n  React.useMemo(() => {\n    // Now that each filtered column has it's partially filtered rows,\n    // lets assign the final filtered rows to all of the other columns\n    const nonFilteredColumns = allColumns.filter(\n      column => !filters.find(d => d.id === column.id)\n    )\n\n    // This essentially enables faceted filter options to be built easily\n    // using every column's preFilteredRows value\n    nonFilteredColumns.forEach(column => {\n      column.preFilteredRows = filteredRows\n      column.filteredRows = filteredRows\n    })\n  }, [filteredRows, filters, allColumns])\n\n  const getAutoResetFilters = useGetLatest(autoResetFilters)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetFilters()) {\n      dispatch({ type: actions.resetFilters })\n    }\n  }, [dispatch, manualFilters ? null : data])\n\n  Object.assign(instance, {\n    preFilteredRows: rows,\n    preFilteredFlatRows: flatRows,\n    preFilteredRowsById: rowsById,\n    filteredRows,\n    filteredFlatRows,\n    filteredRowsById,\n    rows: filteredRows,\n    flatRows: filteredFlatRows,\n    rowsById: filteredRowsById,\n    setFilter,\n    setAllFilters,\n  })\n}\n","import React from 'react'\n\nimport {\n  getFilterMethod,\n  shouldAutoRemoveFilter,\n  getFirstDefined,\n} from '../utils'\n\nimport {\n  actions,\n  useMountedLayoutEffect,\n  functionalUpdate,\n  useGetLatest,\n} from '../publicUtils'\n\nimport * as filterTypes from '../filterTypes'\n\n// Actions\nactions.resetGlobalFilter = 'resetGlobalFilter'\nactions.setGlobalFilter = 'setGlobalFilter'\n\nexport const useGlobalFilter = hooks => {\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n}\n\nuseGlobalFilter.pluginName = 'useGlobalFilter'\n\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.resetGlobalFilter) {\n    return {\n      ...state,\n      globalFilter: instance.initialState.globalFilter || undefined,\n    }\n  }\n\n  if (action.type === actions.setGlobalFilter) {\n    const { filterValue } = action\n    const { userFilterTypes } = instance\n\n    const filterMethod = getFilterMethod(\n      instance.globalFilter,\n      userFilterTypes || {},\n      filterTypes\n    )\n\n    const newFilter = functionalUpdate(filterValue, state.globalFilter)\n\n    //\n    if (shouldAutoRemoveFilter(filterMethod.autoRemove, newFilter)) {\n      const { globalFilter, ...stateWithoutGlobalFilter } = state\n      return stateWithoutGlobalFilter\n    }\n\n    return {\n      ...state,\n      globalFilter: newFilter,\n    }\n  }\n}\n\nfunction useInstance(instance) {\n  const {\n    data,\n    rows,\n    flatRows,\n    rowsById,\n    allColumns,\n    filterTypes: userFilterTypes,\n    globalFilter,\n    manualGlobalFilter,\n    state: { globalFilter: globalFilterValue },\n    dispatch,\n    autoResetGlobalFilter = true,\n    disableGlobalFilter,\n  } = instance\n\n  const setGlobalFilter = React.useCallback(\n    filterValue => {\n      dispatch({ type: actions.setGlobalFilter, filterValue })\n    },\n    [dispatch]\n  )\n\n  // TODO: Create a filter cache for incremental high speed multi-filtering\n  // This gets pretty complicated pretty fast, since you have to maintain a\n  // cache for each row group (top-level rows, and each row's recursive subrows)\n  // This would make multi-filtering a lot faster though. Too far?\n\n  const [\n    globalFilteredRows,\n    globalFilteredFlatRows,\n    globalFilteredRowsById,\n  ] = React.useMemo(() => {\n    if (manualGlobalFilter || typeof globalFilterValue === 'undefined') {\n      return [rows, flatRows, rowsById]\n    }\n\n    const filteredFlatRows = []\n    const filteredRowsById = {}\n\n    const filterMethod = getFilterMethod(\n      globalFilter,\n      userFilterTypes || {},\n      filterTypes\n    )\n\n    if (!filterMethod) {\n      console.warn(`Could not find a valid 'globalFilter' option.`)\n      return rows\n    }\n\n    allColumns.forEach(column => {\n      const { disableGlobalFilter: columnDisableGlobalFilter } = column\n\n      column.canFilter = getFirstDefined(\n        columnDisableGlobalFilter === true ? false : undefined,\n        disableGlobalFilter === true ? false : undefined,\n        true\n      )\n    })\n\n    const filterableColumns = allColumns.filter(c => c.canFilter === true)\n\n    // Filters top level and nested rows\n    const filterRows = filteredRows => {\n      filteredRows = filterMethod(\n        filteredRows,\n        filterableColumns.map(d => d.id),\n        globalFilterValue\n      )\n\n      filteredRows.forEach(row => {\n        filteredFlatRows.push(row)\n        filteredRowsById[row.id] = row\n\n        row.subRows =\n          row.subRows && row.subRows.length\n            ? filterRows(row.subRows)\n            : row.subRows\n      })\n\n      return filteredRows\n    }\n\n    return [filterRows(rows), filteredFlatRows, filteredRowsById]\n  }, [\n    manualGlobalFilter,\n    globalFilterValue,\n    globalFilter,\n    userFilterTypes,\n    allColumns,\n    rows,\n    flatRows,\n    rowsById,\n    disableGlobalFilter,\n  ])\n\n  const getAutoResetGlobalFilter = useGetLatest(autoResetGlobalFilter)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetGlobalFilter()) {\n      dispatch({ type: actions.resetGlobalFilter })\n    }\n  }, [dispatch, manualGlobalFilter ? null : data])\n\n  Object.assign(instance, {\n    preGlobalFilteredRows: rows,\n    preGlobalFilteredFlatRows: flatRows,\n    preGlobalFilteredRowsById: rowsById,\n    globalFilteredRows,\n    globalFilteredFlatRows,\n    globalFilteredRowsById,\n    rows: globalFilteredRows,\n    flatRows: globalFilteredFlatRows,\n    rowsById: globalFilteredRowsById,\n    setGlobalFilter,\n    disableGlobalFilter,\n  })\n}\n","export function sum(values, aggregatedValues) {\n  // It's faster to just add the aggregations together instead of\n  // process leaf nodes individually\n  return aggregatedValues.reduce(\n    (sum, next) => sum + (typeof next === 'number' ? next : 0),\n    0\n  )\n}\n\nexport function min(values) {\n  let min = values[0] || 0\n\n  values.forEach(value => {\n    if (typeof value === 'number') {\n      min = Math.min(min, value)\n    }\n  })\n\n  return min\n}\n\nexport function max(values) {\n  let max = values[0] || 0\n\n  values.forEach(value => {\n    if (typeof value === 'number') {\n      max = Math.max(max, value)\n    }\n  })\n\n  return max\n}\n\nexport function minMax(values) {\n  let min = values[0] || 0\n  let max = values[0] || 0\n\n  values.forEach(value => {\n    if (typeof value === 'number') {\n      min = Math.min(min, value)\n      max = Math.max(max, value)\n    }\n  })\n\n  return `${min}..${max}`\n}\n\nexport function average(values) {\n  return sum(null, values) / values.length\n}\n\nexport function median(values) {\n  if (!values.length) {\n    return null\n  }\n\n  const mid = Math.floor(values.length / 2)\n  const nums = [...values].sort((a, b) => a - b)\n  return values.length % 2 !== 0 ? nums[mid] : (nums[mid - 1] + nums[mid]) / 2\n}\n\nexport function unique(values) {\n  return Array.from(new Set(values).values())\n}\n\nexport function uniqueCount(values) {\n  return new Set(values).size\n}\n\nexport function count(values) {\n  return values.length\n}\n","import React from 'react'\n\nimport * as aggregations from '../aggregations'\n\nimport { getFirstDefined, flattenBy } from '../utils'\n\nimport {\n  actions,\n  makePropGetter,\n  ensurePluginOrder,\n  useMountedLayoutEffect,\n  useGetLatest,\n} from '../publicUtils'\n\nconst emptyArray = []\nconst emptyObject = {}\n\n// Actions\nactions.resetGroupBy = 'resetGroupBy'\nactions.setGroupBy = 'setGroupBy'\nactions.toggleGroupBy = 'toggleGroupBy'\n\nexport const useGroupBy = hooks => {\n  hooks.getGroupByToggleProps = [defaultGetGroupByToggleProps]\n  hooks.stateReducers.push(reducer)\n  hooks.visibleColumnsDeps.push((deps, { instance }) => [\n    ...deps,\n    instance.state.groupBy,\n  ])\n  hooks.visibleColumns.push(visibleColumns)\n  hooks.useInstance.push(useInstance)\n  hooks.prepareRow.push(prepareRow)\n}\n\nuseGroupBy.pluginName = 'useGroupBy'\n\nconst defaultGetGroupByToggleProps = (props, { header }) => [\n  props,\n  {\n    onClick: header.canGroupBy\n      ? e => {\n          e.persist()\n          header.toggleGroupBy()\n        }\n      : undefined,\n    style: {\n      cursor: header.canGroupBy ? 'pointer' : undefined,\n    },\n    title: 'Toggle GroupBy',\n  },\n]\n\n// Reducer\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      groupBy: [],\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetGroupBy) {\n    return {\n      ...state,\n      groupBy: instance.initialState.groupBy || [],\n    }\n  }\n\n  if (action.type === actions.setGroupBy) {\n    const { value } = action\n    return {\n      ...state,\n      groupBy: value,\n    }\n  }\n\n  if (action.type === actions.toggleGroupBy) {\n    const { columnId, value: setGroupBy } = action\n\n    const resolvedGroupBy =\n      typeof setGroupBy !== 'undefined'\n        ? setGroupBy\n        : !state.groupBy.includes(columnId)\n\n    if (resolvedGroupBy) {\n      return {\n        ...state,\n        groupBy: [...state.groupBy, columnId],\n      }\n    }\n\n    return {\n      ...state,\n      groupBy: state.groupBy.filter(d => d !== columnId),\n    }\n  }\n}\n\nfunction visibleColumns(\n  columns,\n  {\n    instance: {\n      state: { groupBy },\n    },\n  }\n) {\n  // Sort grouped columns to the start of the column list\n  // before the headers are built\n\n  const groupByColumns = groupBy\n    .map(g => columns.find(col => col.id === g))\n    .filter(Boolean)\n\n  const nonGroupByColumns = columns.filter(col => !groupBy.includes(col.id))\n\n  columns = [...groupByColumns, ...nonGroupByColumns]\n\n  columns.forEach(column => {\n    column.isGrouped = groupBy.includes(column.id)\n    column.groupedIndex = groupBy.indexOf(column.id)\n  })\n\n  return columns\n}\n\nconst defaultUserAggregations = {}\n\nfunction useInstance(instance) {\n  const {\n    data,\n    rows,\n    flatRows,\n    rowsById,\n    allColumns,\n    flatHeaders,\n    groupByFn = defaultGroupByFn,\n    manualGroupBy,\n    aggregations: userAggregations = defaultUserAggregations,\n    plugins,\n    state: { groupBy },\n    dispatch,\n    autoResetGroupBy = true,\n    disableGroupBy,\n    defaultCanGroupBy,\n    getHooks,\n  } = instance\n\n  ensurePluginOrder(plugins, ['useColumnOrder', 'useFilters'], 'useGroupBy')\n\n  const getInstance = useGetLatest(instance)\n\n  allColumns.forEach(column => {\n    const {\n      accessor,\n      defaultGroupBy: defaultColumnGroupBy,\n      disableGroupBy: columnDisableGroupBy,\n    } = column\n\n    column.canGroupBy = accessor\n      ? getFirstDefined(\n          column.canGroupBy,\n          columnDisableGroupBy === true ? false : undefined,\n          disableGroupBy === true ? false : undefined,\n          true\n        )\n      : getFirstDefined(\n          column.canGroupBy,\n          defaultColumnGroupBy,\n          defaultCanGroupBy,\n          false\n        )\n\n    if (column.canGroupBy) {\n      column.toggleGroupBy = () => instance.toggleGroupBy(column.id)\n    }\n\n    column.Aggregated = column.Aggregated || column.Cell\n  })\n\n  const toggleGroupBy = React.useCallback(\n    (columnId, value) => {\n      dispatch({ type: actions.toggleGroupBy, columnId, value })\n    },\n    [dispatch]\n  )\n\n  const setGroupBy = React.useCallback(\n    value => {\n      dispatch({ type: actions.setGroupBy, value })\n    },\n    [dispatch]\n  )\n\n  flatHeaders.forEach(header => {\n    header.getGroupByToggleProps = makePropGetter(\n      getHooks().getGroupByToggleProps,\n      { instance: getInstance(), header }\n    )\n  })\n\n  const [\n    groupedRows,\n    groupedFlatRows,\n    groupedRowsById,\n    onlyGroupedFlatRows,\n    onlyGroupedRowsById,\n    nonGroupedFlatRows,\n    nonGroupedRowsById,\n  ] = React.useMemo(() => {\n    if (manualGroupBy || !groupBy.length) {\n      return [\n        rows,\n        flatRows,\n        rowsById,\n        emptyArray,\n        emptyObject,\n        flatRows,\n        rowsById,\n      ]\n    }\n\n    // Ensure that the list of filtered columns exist\n    const existingGroupBy = groupBy.filter(g =>\n      allColumns.find(col => col.id === g)\n    )\n\n    // Find the columns that can or are aggregating\n    // Uses each column to aggregate rows into a single value\n    const aggregateRowsToValues = (leafRows, groupedRows, depth) => {\n      const values = {}\n\n      allColumns.forEach(column => {\n        // Don't aggregate columns that are in the groupBy\n        if (existingGroupBy.includes(column.id)) {\n          values[column.id] = groupedRows[0]\n            ? groupedRows[0].values[column.id]\n            : null\n          return\n        }\n\n        // Aggregate the values\n        let aggregateFn =\n          typeof column.aggregate === 'function'\n            ? column.aggregate\n            : userAggregations[column.aggregate] ||\n              aggregations[column.aggregate]\n\n        if (aggregateFn) {\n          // Get the columnValues to aggregate\n          const groupedValues = groupedRows.map(row => row.values[column.id])\n\n          // Get the columnValues to aggregate\n          const leafValues = leafRows.map(row => {\n            let columnValue = row.values[column.id]\n\n            if (!depth && column.aggregateValue) {\n              const aggregateValueFn =\n                typeof column.aggregateValue === 'function'\n                  ? column.aggregateValue\n                  : userAggregations[column.aggregateValue] ||\n                    aggregations[column.aggregateValue]\n\n              if (!aggregateValueFn) {\n                console.info({ column })\n                throw new Error(\n                  `React Table: Invalid column.aggregateValue option for column listed above`\n                )\n              }\n\n              columnValue = aggregateValueFn(columnValue, row, column)\n            }\n            return columnValue\n          })\n\n          values[column.id] = aggregateFn(leafValues, groupedValues)\n        } else if (column.aggregate) {\n          console.info({ column })\n          throw new Error(\n            `React Table: Invalid column.aggregate option for column listed above`\n          )\n        } else {\n          values[column.id] = null\n        }\n      })\n\n      return values\n    }\n\n    let groupedFlatRows = []\n    const groupedRowsById = {}\n    const onlyGroupedFlatRows = []\n    const onlyGroupedRowsById = {}\n    const nonGroupedFlatRows = []\n    const nonGroupedRowsById = {}\n\n    // Recursively group the data\n    const groupUpRecursively = (rows, depth = 0, parentId) => {\n      // This is the last level, just return the rows\n      if (depth === existingGroupBy.length) {\n        return rows\n      }\n\n      const columnId = existingGroupBy[depth]\n\n      // Group the rows together for this level\n      let rowGroupsMap = groupByFn(rows, columnId)\n\n      // Peform aggregations for each group\n      const aggregatedGroupedRows = Object.entries(rowGroupsMap).map(\n        ([groupByVal, groupedRows], index) => {\n          let id = `${columnId}:${groupByVal}`\n          id = parentId ? `${parentId}>${id}` : id\n\n          // First, Recurse to group sub rows before aggregation\n          const subRows = groupUpRecursively(groupedRows, depth + 1, id)\n\n          // Flatten the leaf rows of the rows in this group\n          const leafRows = depth\n            ? flattenBy(groupedRows, 'leafRows')\n            : groupedRows\n\n          const values = aggregateRowsToValues(leafRows, groupedRows, depth)\n\n          const row = {\n            id,\n            isGrouped: true,\n            groupByID: columnId,\n            groupByVal,\n            values,\n            subRows,\n            leafRows,\n            depth,\n            index,\n          }\n\n          subRows.forEach(subRow => {\n            groupedFlatRows.push(subRow)\n            groupedRowsById[subRow.id] = subRow\n            if (subRow.isGrouped) {\n              onlyGroupedFlatRows.push(subRow)\n              onlyGroupedRowsById[subRow.id] = subRow\n            } else {\n              nonGroupedFlatRows.push(subRow)\n              nonGroupedRowsById[subRow.id] = subRow\n            }\n          })\n\n          return row\n        }\n      )\n\n      return aggregatedGroupedRows\n    }\n\n    const groupedRows = groupUpRecursively(rows)\n\n    groupedRows.forEach(subRow => {\n      groupedFlatRows.push(subRow)\n      groupedRowsById[subRow.id] = subRow\n      if (subRow.isGrouped) {\n        onlyGroupedFlatRows.push(subRow)\n        onlyGroupedRowsById[subRow.id] = subRow\n      } else {\n        nonGroupedFlatRows.push(subRow)\n        nonGroupedRowsById[subRow.id] = subRow\n      }\n    })\n\n    // Assign the new data\n    return [\n      groupedRows,\n      groupedFlatRows,\n      groupedRowsById,\n      onlyGroupedFlatRows,\n      onlyGroupedRowsById,\n      nonGroupedFlatRows,\n      nonGroupedRowsById,\n    ]\n  }, [\n    manualGroupBy,\n    groupBy,\n    rows,\n    flatRows,\n    rowsById,\n    allColumns,\n    userAggregations,\n    groupByFn,\n  ])\n\n  const getAutoResetGroupBy = useGetLatest(autoResetGroupBy)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetGroupBy()) {\n      dispatch({ type: actions.resetGroupBy })\n    }\n  }, [dispatch, manualGroupBy ? null : data])\n\n  Object.assign(instance, {\n    preGroupedRows: rows,\n    preGroupedFlatRow: flatRows,\n    preGroupedRowsById: rowsById,\n    groupedRows,\n    groupedFlatRows,\n    groupedRowsById,\n    onlyGroupedFlatRows,\n    onlyGroupedRowsById,\n    nonGroupedFlatRows,\n    nonGroupedRowsById,\n    rows: groupedRows,\n    flatRows: groupedFlatRows,\n    rowsById: groupedRowsById,\n    toggleGroupBy,\n    setGroupBy,\n  })\n}\n\nfunction prepareRow(row) {\n  row.allCells.forEach(cell => {\n    // Grouped cells are in the groupBy and the pivot cell for the row\n    cell.isGrouped = cell.column.isGrouped && cell.column.id === row.groupByID\n    // Placeholder cells are any columns in the groupBy that are not grouped\n    cell.isPlaceholder = !cell.isGrouped && cell.column.isGrouped\n    // Aggregated cells are not grouped, not repeated, but still have subRows\n    cell.isAggregated =\n      !cell.isGrouped && !cell.isPlaceholder && row.subRows?.length\n  })\n}\n\nexport function defaultGroupByFn(rows, columnId) {\n  return rows.reduce((prev, row, i) => {\n    // TODO: Might want to implement a key serializer here so\n    // irregular column values can still be grouped if needed?\n    const resKey = `${row.values[columnId]}`\n    prev[resKey] = Array.isArray(prev[resKey]) ? prev[resKey] : []\n    prev[resKey].push(row)\n    return prev\n  }, {})\n}\n","const reSplitAlphaNumeric = /([0-9]+)/gm\n\n// Mixed sorting is slow, but very inclusive of many edge cases.\n// It handles numbers, mixed alphanumeric combinations, and even\n// null, undefined, and Infinity\nexport const alphanumeric = (rowA, rowB, columnId) => {\n  let [a, b] = getRowValuesByColumnID(rowA, rowB, columnId)\n\n  // Force to strings (or \"\" for unsupported types)\n  a = toString(a)\n  b = toString(b)\n\n  // Split on number groups, but keep the delimiter\n  // Then remove falsey split values\n  a = a.split(reSplitAlphaNumeric).filter(Boolean)\n  b = b.split(reSplitAlphaNumeric).filter(Boolean)\n\n  // While\n  while (a.length && b.length) {\n    let aa = a.shift()\n    let bb = b.shift()\n\n    const an = parseInt(aa, 10)\n    const bn = parseInt(bb, 10)\n\n    const combo = [an, bn].sort()\n\n    // Both are string\n    if (isNaN(combo[0])) {\n      if (aa > bb) {\n        return 1\n      }\n      if (bb > aa) {\n        return -1\n      }\n      continue\n    }\n\n    // One is a string, one is a number\n    if (isNaN(combo[1])) {\n      return isNaN(an) ? -1 : 1\n    }\n\n    // Both are numbers\n    if (an > bn) {\n      return 1\n    }\n    if (bn > an) {\n      return -1\n    }\n  }\n\n  return a.length - b.length\n}\nexport function datetime(rowA, rowB, columnId) {\n  let [a, b] = getRowValuesByColumnID(rowA, rowB, columnId)\n\n  a = a.getTime()\n  b = b.getTime()\n\n  return compareBasic(a, b)\n}\n\nexport function basic(rowA, rowB, columnId) {\n  let [a, b] = getRowValuesByColumnID(rowA, rowB, columnId)\n\n  return compareBasic(a, b)\n}\n\nexport function string(rowA, rowB, columnId) {\n  let [a, b] = getRowValuesByColumnID(rowA, rowB, columnId)\n\n  a = a.split('').filter(Boolean)\n  b = b.split('').filter(Boolean)\n\n  while (a.length && b.length) {\n    let aa = a.shift()\n    let bb = b.shift()\n\n    let alower = aa.toLowerCase()\n    let blower = bb.toLowerCase()\n\n    // Case insensitive comparison until characters match\n    if (alower > blower) {\n      return 1\n    }\n    if (blower > alower) {\n      return -1\n    }\n    // If lowercase characters are identical\n    if (aa > bb) {\n      return 1\n    }\n    if (bb > aa) {\n      return -1\n    }\n    continue\n  }\n\n  return a.length - b.length\n}\n\nexport function number(rowA, rowB, columnId) {\n  let [a, b] = getRowValuesByColumnID(rowA, rowB, columnId)\n\n  const replaceNonNumeric = /[^0-9.]/gi\n\n  a = Number(String(a).replace(replaceNonNumeric, ''))\n  b = Number(String(b).replace(replaceNonNumeric, ''))\n\n  return compareBasic(a, b)\n}\n\n// Utils\n\nfunction compareBasic(a, b) {\n  return a === b ? 0 : a > b ? 1 : -1\n}\n\nfunction getRowValuesByColumnID(row1, row2, columnId) {\n  return [row1.values[columnId], row2.values[columnId]]\n}\n\nfunction toString(a) {\n  if (typeof a === 'number') {\n    if (isNaN(a) || a === Infinity || a === -Infinity) {\n      return ''\n    }\n    return String(a)\n  }\n  if (typeof a === 'string') {\n    return a\n  }\n  return ''\n}\n","import React from 'react'\n\nimport {\n  actions,\n  ensurePluginOrder,\n  defaultColumn,\n  makePropGetter,\n  useGetLatest,\n  useMountedLayoutEffect,\n} from '../publicUtils'\n\nimport { getFirstDefined, isFunction } from '../utils'\n\nimport * as sortTypes from '../sortTypes'\n\n// Actions\nactions.resetSortBy = 'resetSortBy'\nactions.setSortBy = 'setSortBy'\nactions.toggleSortBy = 'toggleSortBy'\nactions.clearSortBy = 'clearSortBy'\n\ndefaultColumn.sortType = 'alphanumeric'\ndefaultColumn.sortDescFirst = false\n\nexport const useSortBy = hooks => {\n  hooks.getSortByToggleProps = [defaultGetSortByToggleProps]\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n}\n\nuseSortBy.pluginName = 'useSortBy'\n\nconst defaultGetSortByToggleProps = (props, { instance, column }) => {\n  const { isMultiSortEvent = e => e.shiftKey } = instance\n\n  return [\n    props,\n    {\n      onClick: column.canSort\n        ? e => {\n            e.persist()\n            column.toggleSortBy(\n              undefined,\n              !instance.disableMultiSort && isMultiSortEvent(e)\n            )\n          }\n        : undefined,\n      style: {\n        cursor: column.canSort ? 'pointer' : undefined,\n      },\n      title: column.canSort ? 'Toggle SortBy' : undefined,\n    },\n  ]\n}\n\n// Reducer\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      sortBy: [],\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetSortBy) {\n    return {\n      ...state,\n      sortBy: instance.initialState.sortBy || [],\n    }\n  }\n\n  if (action.type === actions.clearSortBy) {\n    const { sortBy } = state\n    const newSortBy = sortBy.filter(d => d.id !== action.columnId)\n\n    return {\n      ...state,\n      sortBy: newSortBy,\n    }\n  }\n\n  if (action.type === actions.setSortBy) {\n    const { sortBy } = action\n    return {\n      ...state,\n      sortBy,\n    }\n  }\n\n  if (action.type === actions.toggleSortBy) {\n    const { columnId, desc, multi } = action\n\n    const {\n      allColumns,\n      disableMultiSort,\n      disableSortRemove,\n      disableMultiRemove,\n      maxMultiSortColCount = Number.MAX_SAFE_INTEGER,\n    } = instance\n\n    const { sortBy } = state\n\n    // Find the column for this columnId\n    const column = allColumns.find(d => d.id === columnId)\n    const { sortDescFirst } = column\n\n    // Find any existing sortBy for this column\n    const existingSortBy = sortBy.find(d => d.id === columnId)\n    const existingIndex = sortBy.findIndex(d => d.id === columnId)\n    const hasDescDefined = typeof desc !== 'undefined' && desc !== null\n\n    let newSortBy = []\n\n    // What should we do with this sort action?\n    let sortAction\n\n    if (!disableMultiSort && multi) {\n      if (existingSortBy) {\n        sortAction = 'toggle'\n      } else {\n        sortAction = 'add'\n      }\n    } else {\n      // Normal mode\n      if (existingIndex !== sortBy.length - 1 || sortBy.length !== 1) {\n        sortAction = 'replace'\n      } else if (existingSortBy) {\n        sortAction = 'toggle'\n      } else {\n        sortAction = 'replace'\n      }\n    }\n\n    // Handle toggle states that will remove the sortBy\n    if (\n      sortAction === 'toggle' && // Must be toggling\n      !disableSortRemove && // If disableSortRemove, disable in general\n      !hasDescDefined && // Must not be setting desc\n      (multi ? !disableMultiRemove : true) && // If multi, don't allow if disableMultiRemove\n      ((existingSortBy && // Finally, detect if it should indeed be removed\n        existingSortBy.desc &&\n        !sortDescFirst) ||\n        (!existingSortBy.desc && sortDescFirst))\n    ) {\n      sortAction = 'remove'\n    }\n\n    if (sortAction === 'replace') {\n      newSortBy = [\n        {\n          id: columnId,\n          desc: hasDescDefined ? desc : sortDescFirst,\n        },\n      ]\n    } else if (sortAction === 'add') {\n      newSortBy = [\n        ...sortBy,\n        {\n          id: columnId,\n          desc: hasDescDefined ? desc : sortDescFirst,\n        },\n      ]\n      // Take latest n columns\n      newSortBy.splice(0, newSortBy.length - maxMultiSortColCount)\n    } else if (sortAction === 'toggle') {\n      // This flips (or sets) the\n      newSortBy = sortBy.map(d => {\n        if (d.id === columnId) {\n          return {\n            ...d,\n            desc: hasDescDefined ? desc : !existingSortBy.desc,\n          }\n        }\n        return d\n      })\n    } else if (sortAction === 'remove') {\n      newSortBy = sortBy.filter(d => d.id !== columnId)\n    }\n\n    return {\n      ...state,\n      sortBy: newSortBy,\n    }\n  }\n}\n\nfunction useInstance(instance) {\n  const {\n    data,\n    rows,\n    flatRows,\n    allColumns,\n    orderByFn = defaultOrderByFn,\n    sortTypes: userSortTypes,\n    manualSortBy,\n    defaultCanSort,\n    disableSortBy,\n    flatHeaders,\n    state: { sortBy },\n    dispatch,\n    plugins,\n    getHooks,\n    autoResetSortBy = true,\n  } = instance\n\n  ensurePluginOrder(\n    plugins,\n    ['useFilters', 'useGlobalFilter', 'useGroupBy', 'usePivotColumns'],\n    'useSortBy'\n  )\n\n  const setSortBy = React.useCallback(\n    sortBy => {\n      dispatch({ type: actions.setSortBy, sortBy })\n    },\n    [dispatch]\n  )\n\n  // Updates sorting based on a columnId, desc flag and multi flag\n  const toggleSortBy = React.useCallback(\n    (columnId, desc, multi) => {\n      dispatch({ type: actions.toggleSortBy, columnId, desc, multi })\n    },\n    [dispatch]\n  )\n\n  // use reference to avoid memory leak in #1608\n  const getInstance = useGetLatest(instance)\n\n  // Add the getSortByToggleProps method to columns and headers\n  flatHeaders.forEach(column => {\n    const {\n      accessor,\n      canSort: defaultColumnCanSort,\n      disableSortBy: columnDisableSortBy,\n      id,\n    } = column\n\n    const canSort = accessor\n      ? getFirstDefined(\n          columnDisableSortBy === true ? false : undefined,\n          disableSortBy === true ? false : undefined,\n          true\n        )\n      : getFirstDefined(defaultCanSort, defaultColumnCanSort, false)\n\n    column.canSort = canSort\n\n    if (column.canSort) {\n      column.toggleSortBy = (desc, multi) =>\n        toggleSortBy(column.id, desc, multi)\n\n      column.clearSortBy = () => {\n        dispatch({ type: actions.clearSortBy, columnId: column.id })\n      }\n    }\n\n    column.getSortByToggleProps = makePropGetter(\n      getHooks().getSortByToggleProps,\n      {\n        instance: getInstance(),\n        column,\n      }\n    )\n\n    const columnSort = sortBy.find(d => d.id === id)\n    column.isSorted = !!columnSort\n    column.sortedIndex = sortBy.findIndex(d => d.id === id)\n    column.isSortedDesc = column.isSorted ? columnSort.desc : undefined\n  })\n\n  const [sortedRows, sortedFlatRows] = React.useMemo(() => {\n    if (manualSortBy || !sortBy.length) {\n      return [rows, flatRows]\n    }\n\n    const sortedFlatRows = []\n\n    // Filter out sortBys that correspond to non existing columns\n    const availableSortBy = sortBy.filter(sort =>\n      allColumns.find(col => col.id === sort.id)\n    )\n\n    const sortData = rows => {\n      // Use the orderByFn to compose multiple sortBy's together.\n      // This will also perform a stable sorting using the row index\n      // if needed.\n      const sortedData = orderByFn(\n        rows,\n        availableSortBy.map(sort => {\n          // Support custom sorting methods for each column\n          const column = allColumns.find(d => d.id === sort.id)\n\n          if (!column) {\n            throw new Error(\n              `React-Table: Could not find a column with id: ${sort.id} while sorting`\n            )\n          }\n\n          const { sortType } = column\n\n          // Look up sortBy functions in this order:\n          // column function\n          // column string lookup on user sortType\n          // column string lookup on built-in sortType\n          // default function\n          // default string lookup on user sortType\n          // default string lookup on built-in sortType\n          const sortMethod =\n            isFunction(sortType) ||\n            (userSortTypes || {})[sortType] ||\n            sortTypes[sortType]\n\n          if (!sortMethod) {\n            throw new Error(\n              `React-Table: Could not find a valid sortType of '${sortType}' for column '${sort.id}'.`\n            )\n          }\n\n          // Return the correct sortFn.\n          // This function should always return in ascending order\n          return (a, b) => sortMethod(a, b, sort.id, sort.desc)\n        }),\n        // Map the directions\n        availableSortBy.map(sort => {\n          // Detect and use the sortInverted option\n          const column = allColumns.find(d => d.id === sort.id)\n\n          if (column && column.sortInverted) {\n            return sort.desc\n          }\n\n          return !sort.desc\n        })\n      )\n\n      // If there are sub-rows, sort them\n      sortedData.forEach(row => {\n        sortedFlatRows.push(row)\n        if (!row.subRows || row.subRows.length === 0) {\n          return\n        }\n        row.subRows = sortData(row.subRows)\n      })\n\n      return sortedData\n    }\n\n    return [sortData(rows), sortedFlatRows]\n  }, [\n    manualSortBy,\n    sortBy,\n    rows,\n    flatRows,\n    allColumns,\n    orderByFn,\n    userSortTypes,\n  ])\n\n  const getAutoResetSortBy = useGetLatest(autoResetSortBy)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetSortBy()) {\n      dispatch({ type: actions.resetSortBy })\n    }\n  }, [manualSortBy ? null : data])\n\n  Object.assign(instance, {\n    preSortedRows: rows,\n    preSortedFlatRows: flatRows,\n    sortedRows,\n    sortedFlatRows,\n    rows: sortedRows,\n    flatRows: sortedFlatRows,\n    setSortBy,\n    toggleSortBy,\n  })\n}\n\nexport function defaultOrderByFn(arr, funcs, dirs) {\n  return [...arr].sort((rowA, rowB) => {\n    for (let i = 0; i < funcs.length; i += 1) {\n      const sortFn = funcs[i]\n      const desc = dirs[i] === false || dirs[i] === 'desc'\n      const sortInt = sortFn(rowA, rowB)\n      if (sortInt !== 0) {\n        return desc ? -sortInt : sortInt\n      }\n    }\n    return dirs[0] ? rowA.index - rowB.index : rowB.index - rowA.index\n  })\n}\n","import React from 'react'\n\n//\n\nimport {\n  actions,\n  ensurePluginOrder,\n  functionalUpdate,\n  useMountedLayoutEffect,\n  useGetLatest,\n} from '../publicUtils'\n\nimport { expandRows } from '../utils'\n\nconst pluginName = 'usePagination'\n\n// Actions\nactions.resetPage = 'resetPage'\nactions.gotoPage = 'gotoPage'\nactions.setPageSize = 'setPageSize'\n\nexport const usePagination = hooks => {\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n}\n\nusePagination.pluginName = pluginName\n\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      pageSize: 10,\n      pageIndex: 0,\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetPage) {\n    return {\n      ...state,\n      pageIndex: instance.initialState.pageIndex || 0,\n    }\n  }\n\n  if (action.type === actions.gotoPage) {\n    const { pageCount, page } = instance\n    const newPageIndex = functionalUpdate(action.pageIndex, state.pageIndex)\n    let canNavigate = false\n\n    if (newPageIndex > state.pageIndex) {\n      // next page\n      canNavigate =\n        pageCount === -1\n          ? page.length >= state.pageSize\n          : newPageIndex < pageCount\n    } else if (newPageIndex < state.pageIndex) {\n      // prev page\n      canNavigate = newPageIndex > -1\n    }\n\n    if (!canNavigate) {\n      return state\n    }\n\n    return {\n      ...state,\n      pageIndex: newPageIndex,\n    }\n  }\n\n  if (action.type === actions.setPageSize) {\n    const { pageSize } = action\n    const topRowIndex = state.pageSize * state.pageIndex\n    const pageIndex = Math.floor(topRowIndex / pageSize)\n\n    return {\n      ...state,\n      pageIndex,\n      pageSize,\n    }\n  }\n}\n\nfunction useInstance(instance) {\n  const {\n    rows,\n    autoResetPage = true,\n    manualExpandedKey = 'expanded',\n    plugins,\n    pageCount: userPageCount,\n    paginateExpandedRows = true,\n    expandSubRows = true,\n    state: {\n      pageSize,\n      pageIndex,\n      expanded,\n      globalFilter,\n      filters,\n      groupBy,\n      sortBy,\n    },\n    dispatch,\n    data,\n    manualPagination,\n  } = instance\n\n  ensurePluginOrder(\n    plugins,\n    ['useGlobalFilter', 'useFilters', 'useGroupBy', 'useSortBy', 'useExpanded'],\n    'usePagination'\n  )\n\n  const getAutoResetPage = useGetLatest(autoResetPage)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetPage()) {\n      dispatch({ type: actions.resetPage })\n    }\n  }, [\n    dispatch,\n    manualPagination ? null : data,\n    globalFilter,\n    filters,\n    groupBy,\n    sortBy,\n  ])\n\n  const pageCount = manualPagination\n    ? userPageCount\n    : Math.ceil(rows.length / pageSize)\n\n  const pageOptions = React.useMemo(\n    () =>\n      pageCount > 0\n        ? [...new Array(pageCount)].fill(null).map((d, i) => i)\n        : [],\n    [pageCount]\n  )\n\n  const page = React.useMemo(() => {\n    let page\n\n    if (manualPagination) {\n      page = rows\n    } else {\n      const pageStart = pageSize * pageIndex\n      const pageEnd = pageStart + pageSize\n\n      page = rows.slice(pageStart, pageEnd)\n    }\n\n    if (paginateExpandedRows) {\n      return page\n    }\n\n    return expandRows(page, { manualExpandedKey, expanded, expandSubRows })\n  }, [\n    expandSubRows,\n    expanded,\n    manualExpandedKey,\n    manualPagination,\n    pageIndex,\n    pageSize,\n    paginateExpandedRows,\n    rows,\n  ])\n\n  const canPreviousPage = pageIndex > 0\n  const canNextPage =\n    pageCount === -1 ? page.length >= pageSize : pageIndex < pageCount - 1\n\n  const gotoPage = React.useCallback(\n    pageIndex => {\n      dispatch({ type: actions.gotoPage, pageIndex })\n    },\n    [dispatch]\n  )\n\n  const previousPage = React.useCallback(() => {\n    return gotoPage(old => old - 1)\n  }, [gotoPage])\n\n  const nextPage = React.useCallback(() => {\n    return gotoPage(old => old + 1)\n  }, [gotoPage])\n\n  const setPageSize = React.useCallback(\n    pageSize => {\n      dispatch({ type: actions.setPageSize, pageSize })\n    },\n    [dispatch]\n  )\n\n  Object.assign(instance, {\n    pageOptions,\n    pageCount,\n    page,\n    canPreviousPage,\n    canNextPage,\n    gotoPage,\n    previousPage,\n    nextPage,\n    setPageSize,\n  })\n}\n","/* istanbul ignore file */\n\nimport {\n  actions,\n  makePropGetter,\n  ensurePluginOrder,\n  useMountedLayoutEffect,\n  useGetLatest,\n} from '../publicUtils'\n\nimport { flattenColumns, getFirstDefined } from '../utils'\n\n// Actions\nactions.resetPivot = 'resetPivot'\nactions.togglePivot = 'togglePivot'\n\nexport const _UNSTABLE_usePivotColumns = hooks => {\n  hooks.getPivotToggleProps = [defaultGetPivotToggleProps]\n  hooks.stateReducers.push(reducer)\n  hooks.useInstanceAfterData.push(useInstanceAfterData)\n  hooks.allColumns.push(allColumns)\n  hooks.accessValue.push(accessValue)\n  hooks.materializedColumns.push(materializedColumns)\n  hooks.materializedColumnsDeps.push(materializedColumnsDeps)\n  hooks.visibleColumns.push(visibleColumns)\n  hooks.visibleColumnsDeps.push(visibleColumnsDeps)\n  hooks.useInstance.push(useInstance)\n  hooks.prepareRow.push(prepareRow)\n}\n\n_UNSTABLE_usePivotColumns.pluginName = 'usePivotColumns'\n\nconst defaultPivotColumns = []\n\nconst defaultGetPivotToggleProps = (props, { header }) => [\n  props,\n  {\n    onClick: header.canPivot\n      ? e => {\n          e.persist()\n          header.togglePivot()\n        }\n      : undefined,\n    style: {\n      cursor: header.canPivot ? 'pointer' : undefined,\n    },\n    title: 'Toggle Pivot',\n  },\n]\n\n// Reducer\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      pivotColumns: defaultPivotColumns,\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetPivot) {\n    return {\n      ...state,\n      pivotColumns: instance.initialState.pivotColumns || defaultPivotColumns,\n    }\n  }\n\n  if (action.type === actions.togglePivot) {\n    const { columnId, value: setPivot } = action\n\n    const resolvedPivot =\n      typeof setPivot !== 'undefined'\n        ? setPivot\n        : !state.pivotColumns.includes(columnId)\n\n    if (resolvedPivot) {\n      return {\n        ...state,\n        pivotColumns: [...state.pivotColumns, columnId],\n      }\n    }\n\n    return {\n      ...state,\n      pivotColumns: state.pivotColumns.filter(d => d !== columnId),\n    }\n  }\n}\n\nfunction useInstanceAfterData(instance) {\n  instance.allColumns.forEach(column => {\n    column.isPivotSource = instance.state.pivotColumns.includes(column.id)\n  })\n}\n\nfunction allColumns(columns, { instance }) {\n  columns.forEach(column => {\n    column.isPivotSource = instance.state.pivotColumns.includes(column.id)\n    column.uniqueValues = new Set()\n  })\n  return columns\n}\n\nfunction accessValue(value, { column }) {\n  if (column.uniqueValues && typeof value !== 'undefined') {\n    column.uniqueValues.add(value)\n  }\n  return value\n}\n\nfunction materializedColumns(materialized, { instance }) {\n  const { allColumns, state } = instance\n\n  if (!state.pivotColumns.length || !state.groupBy || !state.groupBy.length) {\n    return materialized\n  }\n\n  const pivotColumns = state.pivotColumns\n    .map(id => allColumns.find(d => d.id === id))\n    .filter(Boolean)\n\n  const sourceColumns = allColumns.filter(\n    d =>\n      !d.isPivotSource &&\n      !state.groupBy.includes(d.id) &&\n      !state.pivotColumns.includes(d.id)\n  )\n\n  const buildPivotColumns = (depth = 0, parent, pivotFilters = []) => {\n    const pivotColumn = pivotColumns[depth]\n\n    if (!pivotColumn) {\n      return sourceColumns.map(sourceColumn => {\n        // TODO: We could offer support here for renesting pivoted\n        // columns inside copies of their header groups. For now,\n        // that seems like it would be (1) overkill on nesting, considering\n        // you already get nesting for every pivot level and (2)\n        // really hard. :)\n\n        return {\n          ...sourceColumn,\n          canPivot: false,\n          isPivoted: true,\n          parent,\n          depth: depth,\n          id: `${parent ? `${parent.id}.${sourceColumn.id}` : sourceColumn.id}`,\n          accessor: (originalRow, i, row) => {\n            if (pivotFilters.every(filter => filter(row))) {\n              return row.values[sourceColumn.id]\n            }\n          },\n        }\n      })\n    }\n\n    const uniqueValues = Array.from(pivotColumn.uniqueValues).sort()\n\n    return uniqueValues.map(uniqueValue => {\n      const columnGroup = {\n        ...pivotColumn,\n        Header:\n          pivotColumn.PivotHeader || typeof pivotColumn.header === 'string'\n            ? `${pivotColumn.Header}: ${uniqueValue}`\n            : uniqueValue,\n        isPivotGroup: true,\n        parent,\n        depth,\n        id: parent\n          ? `${parent.id}.${pivotColumn.id}.${uniqueValue}`\n          : `${pivotColumn.id}.${uniqueValue}`,\n        pivotValue: uniqueValue,\n      }\n\n      columnGroup.columns = buildPivotColumns(depth + 1, columnGroup, [\n        ...pivotFilters,\n        row => row.values[pivotColumn.id] === uniqueValue,\n      ])\n\n      return columnGroup\n    })\n  }\n\n  const newMaterialized = flattenColumns(buildPivotColumns())\n\n  return [...materialized, ...newMaterialized]\n}\n\nfunction materializedColumnsDeps(\n  deps,\n  {\n    instance: {\n      state: { pivotColumns, groupBy },\n    },\n  }\n) {\n  return [...deps, pivotColumns, groupBy]\n}\n\nfunction visibleColumns(visibleColumns, { instance: { state } }) {\n  visibleColumns = visibleColumns.filter(d => !d.isPivotSource)\n\n  if (state.pivotColumns.length && state.groupBy && state.groupBy.length) {\n    visibleColumns = visibleColumns.filter(\n      column => column.isGrouped || column.isPivoted\n    )\n  }\n\n  return visibleColumns\n}\n\nfunction visibleColumnsDeps(deps, { instance }) {\n  return [...deps, instance.state.pivotColumns, instance.state.groupBy]\n}\n\nfunction useInstance(instance) {\n  const {\n    columns,\n    allColumns,\n    flatHeaders,\n    // pivotFn = defaultPivotFn,\n    // manualPivot,\n    getHooks,\n    plugins,\n    dispatch,\n    autoResetPivot = true,\n    manaulPivot,\n    disablePivot,\n    defaultCanPivot,\n  } = instance\n\n  ensurePluginOrder(plugins, ['useGroupBy'], 'usePivotColumns')\n\n  const getInstance = useGetLatest(instance)\n\n  allColumns.forEach(column => {\n    const {\n      accessor,\n      defaultPivot: defaultColumnPivot,\n      disablePivot: columnDisablePivot,\n    } = column\n\n    column.canPivot = accessor\n      ? getFirstDefined(\n          column.canPivot,\n          columnDisablePivot === true ? false : undefined,\n          disablePivot === true ? false : undefined,\n          true\n        )\n      : getFirstDefined(\n          column.canPivot,\n          defaultColumnPivot,\n          defaultCanPivot,\n          false\n        )\n\n    if (column.canPivot) {\n      column.togglePivot = () => instance.togglePivot(column.id)\n    }\n\n    column.Aggregated = column.Aggregated || column.Cell\n  })\n\n  const togglePivot = (columnId, value) => {\n    dispatch({ type: actions.togglePivot, columnId, value })\n  }\n\n  flatHeaders.forEach(header => {\n    header.getPivotToggleProps = makePropGetter(\n      getHooks().getPivotToggleProps,\n      {\n        instance: getInstance(),\n        header,\n      }\n    )\n  })\n\n  const getAutoResetPivot = useGetLatest(autoResetPivot)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetPivot()) {\n      dispatch({ type: actions.resetPivot })\n    }\n  }, [dispatch, manaulPivot ? null : columns])\n\n  Object.assign(instance, {\n    togglePivot,\n  })\n}\n\nfunction prepareRow(row) {\n  row.allCells.forEach(cell => {\n    // Grouped cells are in the pivotColumns and the pivot cell for the row\n    cell.isPivoted = cell.column.isPivoted\n  })\n}\n","import React from 'react'\n\nimport {\n  actions,\n  makePropGetter,\n  ensurePluginOrder,\n  useGetLatest,\n  useMountedLayoutEffect,\n} from '../publicUtils'\n\nconst pluginName = 'useRowSelect'\n\n// Actions\nactions.resetSelectedRows = 'resetSelectedRows'\nactions.toggleAllRowsSelected = 'toggleAllRowsSelected'\nactions.toggleRowSelected = 'toggleRowSelected'\nactions.toggleAllPageRowsSelected = 'toggleAllPageRowsSelected'\n\nexport const useRowSelect = hooks => {\n  hooks.getToggleRowSelectedProps = [defaultGetToggleRowSelectedProps]\n  hooks.getToggleAllRowsSelectedProps = [defaultGetToggleAllRowsSelectedProps]\n  hooks.getToggleAllPageRowsSelectedProps = [\n    defaultGetToggleAllPageRowsSelectedProps,\n  ]\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n  hooks.prepareRow.push(prepareRow)\n}\n\nuseRowSelect.pluginName = pluginName\n\nconst defaultGetToggleRowSelectedProps = (props, { instance, row }) => {\n  const { manualRowSelectedKey = 'isSelected' } = instance\n  let checked = false\n\n  if (row.original && row.original[manualRowSelectedKey]) {\n    checked = true\n  } else {\n    checked = row.isSelected\n  }\n\n  return [\n    props,\n    {\n      onChange: e => {\n        row.toggleRowSelected(e.target.checked)\n      },\n      style: {\n        cursor: 'pointer',\n      },\n      checked,\n      title: 'Toggle Row Selected',\n      indeterminate: row.isSomeSelected,\n    },\n  ]\n}\n\nconst defaultGetToggleAllRowsSelectedProps = (props, { instance }) => [\n  props,\n  {\n    onChange: e => {\n      instance.toggleAllRowsSelected(e.target.checked)\n    },\n    style: {\n      cursor: 'pointer',\n    },\n    checked: instance.isAllRowsSelected,\n    title: 'Toggle All Rows Selected',\n    indeterminate: Boolean(\n      !instance.isAllRowsSelected &&\n        Object.keys(instance.state.selectedRowIds).length\n    ),\n  },\n]\n\nconst defaultGetToggleAllPageRowsSelectedProps = (props, { instance }) => [\n  props,\n  {\n    onChange(e) {\n      instance.toggleAllPageRowsSelected(e.target.checked)\n    },\n    style: {\n      cursor: 'pointer',\n    },\n    checked: instance.isAllPageRowsSelected,\n    title: 'Toggle All Current Page Rows Selected',\n    indeterminate: Boolean(\n      !instance.isAllPageRowsSelected &&\n        instance.page.some(({ id }) => instance.state.selectedRowIds[id])\n    ),\n  },\n]\n\n// eslint-disable-next-line max-params\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      selectedRowIds: {},\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetSelectedRows) {\n    return {\n      ...state,\n      selectedRowIds: instance.initialState.selectedRowIds || {},\n    }\n  }\n\n  if (action.type === actions.toggleAllRowsSelected) {\n    const { value: setSelected } = action\n    const {\n      isAllRowsSelected,\n      rowsById,\n      nonGroupedRowsById = rowsById,\n    } = instance\n\n    const selectAll =\n      typeof setSelected !== 'undefined' ? setSelected : !isAllRowsSelected\n\n    // Only remove/add the rows that are visible on the screen\n    //  Leave all the other rows that are selected alone.\n    const selectedRowIds = Object.assign({}, state.selectedRowIds)\n\n    if (selectAll) {\n      Object.keys(nonGroupedRowsById).forEach(rowId => {\n        selectedRowIds[rowId] = true\n      })\n    } else {\n      Object.keys(nonGroupedRowsById).forEach(rowId => {\n        delete selectedRowIds[rowId]\n      })\n    }\n\n    return {\n      ...state,\n      selectedRowIds,\n    }\n  }\n\n  if (action.type === actions.toggleRowSelected) {\n    const { id, value: setSelected } = action\n    const { rowsById, selectSubRows = true, getSubRows } = instance\n    const isSelected = state.selectedRowIds[id]\n    const shouldExist =\n      typeof setSelected !== 'undefined' ? setSelected : !isSelected\n\n    if (isSelected === shouldExist) {\n      return state\n    }\n\n    const newSelectedRowIds = { ...state.selectedRowIds }\n\n    const handleRowById = id => {\n      const row = rowsById[id]\n\n      if (!row.isGrouped) {\n        if (shouldExist) {\n          newSelectedRowIds[id] = true\n        } else {\n          delete newSelectedRowIds[id]\n        }\n      }\n\n      if (selectSubRows && getSubRows(row)) {\n        return getSubRows(row).forEach(row => handleRowById(row.id))\n      }\n    }\n\n    handleRowById(id)\n\n    return {\n      ...state,\n      selectedRowIds: newSelectedRowIds,\n    }\n  }\n\n  if (action.type === actions.toggleAllPageRowsSelected) {\n    const { value: setSelected } = action\n    const {\n      page,\n      rowsById,\n      selectSubRows = true,\n      isAllPageRowsSelected,\n      getSubRows,\n    } = instance\n\n    const selectAll =\n      typeof setSelected !== 'undefined' ? setSelected : !isAllPageRowsSelected\n\n    const newSelectedRowIds = { ...state.selectedRowIds }\n\n    const handleRowById = id => {\n      const row = rowsById[id]\n\n      if (!row.isGrouped) {\n        if (selectAll) {\n          newSelectedRowIds[id] = true\n        } else {\n          delete newSelectedRowIds[id]\n        }\n      }\n\n      if (selectSubRows && getSubRows(row)) {\n        return getSubRows(row).forEach(row => handleRowById(row.id))\n      }\n    }\n\n    page.forEach(row => handleRowById(row.id))\n\n    return {\n      ...state,\n      selectedRowIds: newSelectedRowIds,\n    }\n  }\n  return state\n}\n\nfunction useInstance(instance) {\n  const {\n    data,\n    rows,\n    getHooks,\n    plugins,\n    rowsById,\n    nonGroupedRowsById = rowsById,\n    autoResetSelectedRows = true,\n    state: { selectedRowIds },\n    selectSubRows = true,\n    dispatch,\n    page,\n    getSubRows,\n  } = instance\n\n  ensurePluginOrder(\n    plugins,\n    ['useFilters', 'useGroupBy', 'useSortBy', 'useExpanded', 'usePagination'],\n    'useRowSelect'\n  )\n\n  const selectedFlatRows = React.useMemo(() => {\n    const selectedFlatRows = []\n\n    rows.forEach(row => {\n      const isSelected = selectSubRows\n        ? getRowIsSelected(row, selectedRowIds, getSubRows)\n        : !!selectedRowIds[row.id]\n      row.isSelected = !!isSelected\n      row.isSomeSelected = isSelected === null\n\n      if (isSelected) {\n        selectedFlatRows.push(row)\n      }\n    })\n\n    return selectedFlatRows\n  }, [rows, selectSubRows, selectedRowIds, getSubRows])\n\n  let isAllRowsSelected = Boolean(\n    Object.keys(nonGroupedRowsById).length && Object.keys(selectedRowIds).length\n  )\n\n  let isAllPageRowsSelected = isAllRowsSelected\n\n  if (isAllRowsSelected) {\n    if (Object.keys(nonGroupedRowsById).some(id => !selectedRowIds[id])) {\n      isAllRowsSelected = false\n    }\n  }\n\n  if (!isAllRowsSelected) {\n    if (page && page.length && page.some(({ id }) => !selectedRowIds[id])) {\n      isAllPageRowsSelected = false\n    }\n  }\n\n  const getAutoResetSelectedRows = useGetLatest(autoResetSelectedRows)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetSelectedRows()) {\n      dispatch({ type: actions.resetSelectedRows })\n    }\n  }, [dispatch, data])\n\n  const toggleAllRowsSelected = React.useCallback(\n    value => dispatch({ type: actions.toggleAllRowsSelected, value }),\n    [dispatch]\n  )\n\n  const toggleAllPageRowsSelected = React.useCallback(\n    value => dispatch({ type: actions.toggleAllPageRowsSelected, value }),\n    [dispatch]\n  )\n\n  const toggleRowSelected = React.useCallback(\n    (id, value) => dispatch({ type: actions.toggleRowSelected, id, value }),\n    [dispatch]\n  )\n\n  const getInstance = useGetLatest(instance)\n\n  const getToggleAllRowsSelectedProps = makePropGetter(\n    getHooks().getToggleAllRowsSelectedProps,\n    { instance: getInstance() }\n  )\n\n  const getToggleAllPageRowsSelectedProps = makePropGetter(\n    getHooks().getToggleAllPageRowsSelectedProps,\n    { instance: getInstance() }\n  )\n\n  Object.assign(instance, {\n    selectedFlatRows,\n    isAllRowsSelected,\n    isAllPageRowsSelected,\n    toggleRowSelected,\n    toggleAllRowsSelected,\n    getToggleAllRowsSelectedProps,\n    getToggleAllPageRowsSelectedProps,\n    toggleAllPageRowsSelected,\n  })\n}\n\nfunction prepareRow(row, { instance }) {\n  row.toggleRowSelected = set => instance.toggleRowSelected(row.id, set)\n\n  row.getToggleRowSelectedProps = makePropGetter(\n    instance.getHooks().getToggleRowSelectedProps,\n    { instance: instance, row }\n  )\n}\n\nfunction getRowIsSelected(row, selectedRowIds, getSubRows) {\n  if (selectedRowIds[row.id]) {\n    return true\n  }\n\n  const subRows = getSubRows(row)\n\n  if (subRows && subRows.length) {\n    let allChildrenSelected = true\n    let someSelected = false\n\n    subRows.forEach(subRow => {\n      // Bail out early if we know both of these\n      if (someSelected && !allChildrenSelected) {\n        return\n      }\n\n      if (getRowIsSelected(subRow, selectedRowIds, getSubRows)) {\n        someSelected = true\n      } else {\n        allChildrenSelected = false\n      }\n    })\n    return allChildrenSelected ? true : someSelected ? null : false\n  }\n\n  return false\n}\n","import React from 'react'\n\nimport {\n  actions,\n  functionalUpdate,\n  useMountedLayoutEffect,\n  useGetLatest,\n} from '../publicUtils'\n\nconst defaultInitialRowStateAccessor = row => ({})\nconst defaultInitialCellStateAccessor = cell => ({})\n\n// Actions\nactions.setRowState = 'setRowState'\nactions.setCellState = 'setCellState'\nactions.resetRowState = 'resetRowState'\n\nexport const useRowState = hooks => {\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n  hooks.prepareRow.push(prepareRow)\n}\n\nuseRowState.pluginName = 'useRowState'\n\nfunction reducer(state, action, previousState, instance) {\n  const {\n    initialRowStateAccessor = defaultInitialRowStateAccessor,\n    initialCellStateAccessor = defaultInitialCellStateAccessor,\n    rowsById,\n  } = instance\n\n  if (action.type === actions.init) {\n    return {\n      rowState: {},\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetRowState) {\n    return {\n      ...state,\n      rowState: instance.initialState.rowState || {},\n    }\n  }\n\n  if (action.type === actions.setRowState) {\n    const { rowId, value } = action\n\n    const oldRowState =\n      typeof state.rowState[rowId] !== 'undefined'\n        ? state.rowState[rowId]\n        : initialRowStateAccessor(rowsById[rowId])\n\n    return {\n      ...state,\n      rowState: {\n        ...state.rowState,\n        [rowId]: functionalUpdate(value, oldRowState),\n      },\n    }\n  }\n\n  if (action.type === actions.setCellState) {\n    const { rowId, columnId, value } = action\n\n    const oldRowState =\n      typeof state.rowState[rowId] !== 'undefined'\n        ? state.rowState[rowId]\n        : initialRowStateAccessor(rowsById[rowId])\n\n    const oldCellState =\n      typeof oldRowState?.cellState?.[columnId] !== 'undefined'\n        ? oldRowState.cellState[columnId]\n        : initialCellStateAccessor(\n            rowsById[rowId]?.cells?.find(cell => cell.column.id === columnId)\n          )\n\n    return {\n      ...state,\n      rowState: {\n        ...state.rowState,\n        [rowId]: {\n          ...oldRowState,\n          cellState: {\n            ...(oldRowState.cellState || {}),\n            [columnId]: functionalUpdate(value, oldCellState),\n          },\n        },\n      },\n    }\n  }\n}\n\nfunction useInstance(instance) {\n  const { autoResetRowState = true, data, dispatch } = instance\n\n  const setRowState = React.useCallback(\n    (rowId, value) =>\n      dispatch({\n        type: actions.setRowState,\n        rowId,\n        value,\n      }),\n    [dispatch]\n  )\n\n  const setCellState = React.useCallback(\n    (rowId, columnId, value) =>\n      dispatch({\n        type: actions.setCellState,\n        rowId,\n        columnId,\n        value,\n      }),\n    [dispatch]\n  )\n\n  const getAutoResetRowState = useGetLatest(autoResetRowState)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetRowState()) {\n      dispatch({ type: actions.resetRowState })\n    }\n  }, [data])\n\n  Object.assign(instance, {\n    setRowState,\n    setCellState,\n  })\n}\n\nfunction prepareRow(row, { instance }) {\n  const {\n    initialRowStateAccessor = defaultInitialRowStateAccessor,\n    initialCellStateAccessor = defaultInitialCellStateAccessor,\n    state: { rowState },\n  } = instance\n\n  if (row) {\n    row.state =\n      typeof rowState[row.id] !== 'undefined'\n        ? rowState[row.id]\n        : initialRowStateAccessor(row)\n\n    row.setState = updater => {\n      return instance.setRowState(row.id, updater)\n    }\n\n    row.cells.forEach(cell => {\n      if (!row.state.cellState) {\n        row.state.cellState = {}\n      }\n\n      cell.state =\n        typeof row.state.cellState[cell.column.id] !== 'undefined'\n          ? row.state.cellState[cell.column.id]\n          : initialCellStateAccessor(cell)\n\n      cell.setState = updater => {\n        return instance.setCellState(row.id, cell.column.id, updater)\n      }\n    })\n  }\n}\n","import React from 'react'\n\nimport { functionalUpdate, actions } from '../publicUtils'\n\n// Actions\nactions.resetColumnOrder = 'resetColumnOrder'\nactions.setColumnOrder = 'setColumnOrder'\n\nexport const useColumnOrder = hooks => {\n  hooks.stateReducers.push(reducer)\n  hooks.visibleColumnsDeps.push((deps, { instance }) => {\n    return [...deps, instance.state.columnOrder]\n  })\n  hooks.visibleColumns.push(visibleColumns)\n  hooks.useInstance.push(useInstance)\n}\n\nuseColumnOrder.pluginName = 'useColumnOrder'\n\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      columnOrder: [],\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetColumnOrder) {\n    return {\n      ...state,\n      columnOrder: instance.initialState.columnOrder || [],\n    }\n  }\n\n  if (action.type === actions.setColumnOrder) {\n    return {\n      ...state,\n      columnOrder: functionalUpdate(action.columnOrder, state.columnOrder),\n    }\n  }\n}\n\nfunction visibleColumns(\n  columns,\n  {\n    instance: {\n      state: { columnOrder },\n    },\n  }\n) {\n  // If there is no order, return the normal columns\n  if (!columnOrder || !columnOrder.length) {\n    return columns\n  }\n\n  const columnOrderCopy = [...columnOrder]\n\n  // If there is an order, make a copy of the columns\n  const columnsCopy = [...columns]\n\n  // And make a new ordered array of the columns\n  const columnsInOrder = []\n\n  // Loop over the columns and place them in order into the new array\n  while (columnsCopy.length && columnOrderCopy.length) {\n    const targetColumnId = columnOrderCopy.shift()\n    const foundIndex = columnsCopy.findIndex(d => d.id === targetColumnId)\n    if (foundIndex > -1) {\n      columnsInOrder.push(columnsCopy.splice(foundIndex, 1)[0])\n    }\n  }\n\n  // If there are any columns left, add them to the end\n  return [...columnsInOrder, ...columnsCopy]\n}\n\nfunction useInstance(instance) {\n  const { dispatch } = instance\n\n  instance.setColumnOrder = React.useCallback(\n    columnOrder => {\n      return dispatch({ type: actions.setColumnOrder, columnOrder })\n    },\n    [dispatch]\n  )\n}\n","import React from 'react'\n\nimport {\n  actions,\n  defaultColumn,\n  makePropGetter,\n  useGetLatest,\n  ensurePluginOrder,\n  useMountedLayoutEffect,\n} from '../publicUtils'\n\nimport { getFirstDefined, passiveEventSupported } from '../utils'\n\n// Default Column\ndefaultColumn.canResize = true\n\n// Actions\nactions.columnStartResizing = 'columnStartResizing'\nactions.columnResizing = 'columnResizing'\nactions.columnDoneResizing = 'columnDoneResizing'\nactions.resetResize = 'resetResize'\n\nexport const useResizeColumns = hooks => {\n  hooks.getResizerProps = [defaultGetResizerProps]\n  hooks.getHeaderProps.push({\n    style: {\n      position: 'relative',\n    },\n  })\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n  hooks.useInstanceBeforeDimensions.push(useInstanceBeforeDimensions)\n}\n\nconst defaultGetResizerProps = (props, { instance, header }) => {\n  const { dispatch } = instance\n\n  const onResizeStart = (e, header) => {\n    let isTouchEvent = false\n    if (e.type === 'touchstart') {\n      // lets not respond to multiple touches (e.g. 2 or 3 fingers)\n      if (e.touches && e.touches.length > 1) {\n        return\n      }\n      isTouchEvent = true\n    }\n    const headersToResize = getLeafHeaders(header)\n    const headerIdWidths = headersToResize.map(d => [d.id, d.totalWidth])\n\n    const clientX = isTouchEvent ? Math.round(e.touches[0].clientX) : e.clientX\n\n    const dispatchMove = clientXPos => {\n      dispatch({ type: actions.columnResizing, clientX: clientXPos })\n    }\n    const dispatchEnd = () => dispatch({ type: actions.columnDoneResizing })\n\n    const handlersAndEvents = {\n      mouse: {\n        moveEvent: 'mousemove',\n        moveHandler: e => dispatchMove(e.clientX),\n        upEvent: 'mouseup',\n        upHandler: e => {\n          document.removeEventListener(\n            'mousemove',\n            handlersAndEvents.mouse.moveHandler\n          )\n          document.removeEventListener(\n            'mouseup',\n            handlersAndEvents.mouse.upHandler\n          )\n          dispatchEnd()\n        },\n      },\n      touch: {\n        moveEvent: 'touchmove',\n        moveHandler: e => {\n          if (e.cancelable) {\n            e.preventDefault()\n            e.stopPropagation()\n          }\n          dispatchMove(e.touches[0].clientX)\n          return false\n        },\n        upEvent: 'touchend',\n        upHandler: e => {\n          document.removeEventListener(\n            handlersAndEvents.touch.moveEvent,\n            handlersAndEvents.touch.moveHandler\n          )\n          document.removeEventListener(\n            handlersAndEvents.touch.upEvent,\n            handlersAndEvents.touch.moveHandler\n          )\n          dispatchEnd()\n        },\n      },\n    }\n\n    const events = isTouchEvent\n      ? handlersAndEvents.touch\n      : handlersAndEvents.mouse\n    const passiveIfSupported = passiveEventSupported()\n      ? { passive: false }\n      : false\n    document.addEventListener(\n      events.moveEvent,\n      events.moveHandler,\n      passiveIfSupported\n    )\n    document.addEventListener(\n      events.upEvent,\n      events.upHandler,\n      passiveIfSupported\n    )\n\n    dispatch({\n      type: actions.columnStartResizing,\n      columnId: header.id,\n      columnWidth: header.totalWidth,\n      headerIdWidths,\n      clientX,\n    })\n  }\n\n  return [\n    props,\n    {\n      onMouseDown: e => e.persist() || onResizeStart(e, header),\n      onTouchStart: e => e.persist() || onResizeStart(e, header),\n      style: {\n        cursor: 'col-resize',\n      },\n      draggable: false,\n      role: 'separator',\n    },\n  ]\n}\n\nuseResizeColumns.pluginName = 'useResizeColumns'\n\nfunction reducer(state, action) {\n  if (action.type === actions.init) {\n    return {\n      columnResizing: {\n        columnWidths: {},\n      },\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetResize) {\n    return {\n      ...state,\n      columnResizing: {\n        columnWidths: {},\n      },\n    }\n  }\n\n  if (action.type === actions.columnStartResizing) {\n    const { clientX, columnId, columnWidth, headerIdWidths } = action\n\n    return {\n      ...state,\n      columnResizing: {\n        ...state.columnResizing,\n        startX: clientX,\n        headerIdWidths,\n        columnWidth,\n        isResizingColumn: columnId,\n      },\n    }\n  }\n\n  if (action.type === actions.columnResizing) {\n    const { clientX } = action\n    const { startX, columnWidth, headerIdWidths = [] } = state.columnResizing\n\n    const deltaX = clientX - startX\n    const percentageDeltaX = deltaX / columnWidth\n\n    const newColumnWidths = {}\n\n    headerIdWidths.forEach(([headerId, headerWidth]) => {\n      newColumnWidths[headerId] = Math.max(\n        headerWidth + headerWidth * percentageDeltaX,\n        0\n      )\n    })\n\n    return {\n      ...state,\n      columnResizing: {\n        ...state.columnResizing,\n        columnWidths: {\n          ...state.columnResizing.columnWidths,\n          ...newColumnWidths,\n        },\n      },\n    }\n  }\n\n  if (action.type === actions.columnDoneResizing) {\n    return {\n      ...state,\n      columnResizing: {\n        ...state.columnResizing,\n        startX: null,\n        isResizingColumn: null,\n      },\n    }\n  }\n}\n\nconst useInstanceBeforeDimensions = instance => {\n  const {\n    flatHeaders,\n    disableResizing,\n    getHooks,\n    state: { columnResizing },\n  } = instance\n\n  const getInstance = useGetLatest(instance)\n\n  flatHeaders.forEach(header => {\n    const canResize = getFirstDefined(\n      header.disableResizing === true ? false : undefined,\n      disableResizing === true ? false : undefined,\n      true\n    )\n\n    header.canResize = canResize\n    header.width =\n      columnResizing.columnWidths[header.id] ||\n      header.originalWidth ||\n      header.width\n    header.isResizing = columnResizing.isResizingColumn === header.id\n\n    if (canResize) {\n      header.getResizerProps = makePropGetter(getHooks().getResizerProps, {\n        instance: getInstance(),\n        header,\n      })\n    }\n  })\n}\n\nfunction useInstance(instance) {\n  const { plugins, dispatch, autoResetResize = true, columns } = instance\n\n  ensurePluginOrder(plugins, ['useAbsoluteLayout'], 'useResizeColumns')\n\n  const getAutoResetResize = useGetLatest(autoResetResize)\n  useMountedLayoutEffect(() => {\n    if (getAutoResetResize()) {\n      dispatch({ type: actions.resetResize })\n    }\n  }, [columns])\n\n  const resetResizing = React.useCallback(\n    () => dispatch({ type: actions.resetResize }),\n    [dispatch]\n  )\n\n  Object.assign(instance, {\n    resetResizing,\n  })\n}\n\nfunction getLeafHeaders(header) {\n  const leafHeaders = []\n  const recurseHeader = header => {\n    if (header.columns && header.columns.length) {\n      header.columns.map(recurseHeader)\n    }\n    leafHeaders.push(header)\n  }\n  recurseHeader(header)\n  return leafHeaders\n}\n","const cellStyles = {\n  position: 'absolute',\n  top: 0,\n}\n\nexport const useAbsoluteLayout = hooks => {\n  hooks.getTableBodyProps.push(getRowStyles)\n  hooks.getRowProps.push(getRowStyles)\n  hooks.getHeaderGroupProps.push(getRowStyles)\n  hooks.getFooterGroupProps.push(getRowStyles)\n\n  hooks.getHeaderProps.push((props, { column }) => [\n    props,\n    {\n      style: {\n        ...cellStyles,\n        left: `${column.totalLeft}px`,\n        width: `${column.totalWidth}px`,\n      },\n    },\n  ])\n\n  hooks.getCellProps.push((props, { cell }) => [\n    props,\n    {\n      style: {\n        ...cellStyles,\n        left: `${cell.column.totalLeft}px`,\n        width: `${cell.column.totalWidth}px`,\n      },\n    },\n  ])\n\n  hooks.getFooterProps.push((props, { column }) => [\n    props,\n    {\n      style: {\n        ...cellStyles,\n        left: `${column.totalLeft}px`,\n        width: `${column.totalWidth}px`,\n      },\n    },\n  ])\n}\n\nuseAbsoluteLayout.pluginName = 'useAbsoluteLayout'\n\nconst getRowStyles = (props, { instance }) => [\n  props,\n  {\n    style: {\n      position: 'relative',\n      width: `${instance.totalColumnsWidth}px`,\n    },\n  },\n]\n","const cellStyles = {\n  display: 'inline-block',\n  boxSizing: 'border-box',\n}\n\nconst getRowStyles = (props, { instance }) => [\n  props,\n  {\n    style: {\n      display: 'flex',\n      width: `${instance.totalColumnsWidth}px`,\n    },\n  },\n]\n\nexport const useBlockLayout = hooks => {\n  hooks.getRowProps.push(getRowStyles)\n  hooks.getHeaderGroupProps.push(getRowStyles)\n  hooks.getFooterGroupProps.push(getRowStyles)\n\n  hooks.getHeaderProps.push((props, { column }) => [\n    props,\n    {\n      style: {\n        ...cellStyles,\n        width: `${column.totalWidth}px`,\n      },\n    },\n  ])\n\n  hooks.getCellProps.push((props, { cell }) => [\n    props,\n    {\n      style: {\n        ...cellStyles,\n        width: `${cell.column.totalWidth}px`,\n      },\n    },\n  ])\n\n  hooks.getFooterProps.push((props, { column }) => [\n    props,\n    {\n      style: {\n        ...cellStyles,\n        width: `${column.totalWidth}px`,\n      },\n    },\n  ])\n}\n\nuseBlockLayout.pluginName = 'useBlockLayout'\n","export function useFlexLayout(hooks) {\n  hooks.getTableProps.push(getTableProps)\n  hooks.getRowProps.push(getRowStyles)\n  hooks.getHeaderGroupProps.push(getRowStyles)\n  hooks.getFooterGroupProps.push(getRowStyles)\n  hooks.getHeaderProps.push(getHeaderProps)\n  hooks.getCellProps.push(getCellProps)\n  hooks.getFooterProps.push(getFooterProps)\n}\n\nuseFlexLayout.pluginName = 'useFlexLayout'\n\nconst getTableProps = (props, { instance }) => [\n  props,\n  {\n    style: {\n      minWidth: `${instance.totalColumnsMinWidth}px`,\n    },\n  },\n]\n\nconst getRowStyles = (props, { instance }) => [\n  props,\n  {\n    style: {\n      display: 'flex',\n      flex: '1 0 auto',\n      minWidth: `${instance.totalColumnsMinWidth}px`,\n    },\n  },\n]\n\nconst getHeaderProps = (props, { column }) => [\n  props,\n  {\n    style: {\n      boxSizing: 'border-box',\n      flex: column.totalFlexWidth\n        ? `${column.totalFlexWidth} 0 auto`\n        : undefined,\n      minWidth: `${column.totalMinWidth}px`,\n      width: `${column.totalWidth}px`,\n    },\n  },\n]\n\nconst getCellProps = (props, { cell }) => [\n  props,\n  {\n    style: {\n      boxSizing: 'border-box',\n      flex: `${cell.column.totalFlexWidth} 0 auto`,\n      minWidth: `${cell.column.totalMinWidth}px`,\n      width: `${cell.column.totalWidth}px`,\n    },\n  },\n]\n\nconst getFooterProps = (props, { column }) => [\n  props,\n  {\n    style: {\n      boxSizing: 'border-box',\n      flex: column.totalFlexWidth\n        ? `${column.totalFlexWidth} 0 auto`\n        : undefined,\n      minWidth: `${column.totalMinWidth}px`,\n      width: `${column.totalWidth}px`,\n    },\n  },\n]\n","export function useGridLayout(hooks) {\n  hooks.stateReducers.push(reducer)\n  hooks.getTableProps.push(getTableProps)\n  hooks.getHeaderProps.push(getHeaderProps)\n}\n\nuseGridLayout.pluginName = 'useGridLayout'\n\nconst getTableProps = (props, { instance }) => [\n  props,\n  {\n    style: {\n      display: `grid`,\n      gridTemplateColumns: instance.state.gridLayout.columnWidths.map(w => w).join(` `),\n    },\n  },\n]\n\nconst getHeaderProps = (props, { column }) => [\n  props,\n  {\n    id: `header-cell-${column.id}`,\n    style: {\n      position: `sticky` //enables a scroll wrapper to be placed around the table and have sticky headers\n    },\n  },\n]\n\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === `init`) {\n    return {\n      gridLayout: {\n        columnWidths: instance.columns.map(() => `auto`),\n      },\n      ...state,\n    }\n  }\n\n  if (action.type === `columnStartResizing`) {\n    const { columnId } = action\n    const columnIndex = instance.visibleColumns.findIndex(col => col.id === columnId)\n    const elWidth = getElementWidth(columnId)\n\n    if (elWidth !== undefined) {\n      return {\n        ...state,\n        gridLayout: {\n          ...state.gridLayout,\n          columnId,\n          columnIndex,\n          startingWidth: elWidth\n        },\n      }\n    } else {\n      return state\n    }\n  }\n\n  if (action.type === `columnResizing`) {\n    const {\n      columnIndex,\n      startingWidth,\n      columnWidths,\n    } = state.gridLayout\n\n    const change = state.columnResizing.startX - action.clientX\n    const newWidth = startingWidth - change\n    const columnWidthsCopy = [...columnWidths]\n    columnWidthsCopy[columnIndex] = `${newWidth}px`\n\n    return {\n      ...state,\n      gridLayout: {\n        ...state.gridLayout,\n        columnWidths: columnWidthsCopy,\n      },\n    }\n  }\n}\n\nfunction getElementWidth(columnId) {\n  const width = document.getElementById(`header-cell-${columnId}`)?.offsetWidth\n\n  if (width !== undefined) {\n    return width\n  }\n}","var characterMap = {\r\n\t\"À\": \"A\",\r\n\t\"Á\": \"A\",\r\n\t\"Â\": \"A\",\r\n\t\"Ã\": \"A\",\r\n\t\"Ä\": \"A\",\r\n\t\"Å\": \"A\",\r\n\t\"Ấ\": \"A\",\r\n\t\"Ắ\": \"A\",\r\n\t\"Ẳ\": \"A\",\r\n\t\"Ẵ\": \"A\",\r\n\t\"Ặ\": \"A\",\r\n\t\"Æ\": \"AE\",\r\n\t\"Ầ\": \"A\",\r\n\t\"Ằ\": \"A\",\r\n\t\"Ȃ\": \"A\",\r\n\t\"Ç\": \"C\",\r\n\t\"Ḉ\": \"C\",\r\n\t\"È\": \"E\",\r\n\t\"É\": \"E\",\r\n\t\"Ê\": \"E\",\r\n\t\"Ë\": \"E\",\r\n\t\"Ế\": \"E\",\r\n\t\"Ḗ\": \"E\",\r\n\t\"Ề\": \"E\",\r\n\t\"Ḕ\": \"E\",\r\n\t\"Ḝ\": \"E\",\r\n\t\"Ȇ\": \"E\",\r\n\t\"Ì\": \"I\",\r\n\t\"Í\": \"I\",\r\n\t\"Î\": \"I\",\r\n\t\"Ï\": \"I\",\r\n\t\"Ḯ\": \"I\",\r\n\t\"Ȋ\": \"I\",\r\n\t\"Ð\": \"D\",\r\n\t\"Ñ\": \"N\",\r\n\t\"Ò\": \"O\",\r\n\t\"Ó\": \"O\",\r\n\t\"Ô\": \"O\",\r\n\t\"Õ\": \"O\",\r\n\t\"Ö\": \"O\",\r\n\t\"Ø\": \"O\",\r\n\t\"Ố\": \"O\",\r\n\t\"Ṍ\": \"O\",\r\n\t\"Ṓ\": \"O\",\r\n\t\"Ȏ\": \"O\",\r\n\t\"Ù\": \"U\",\r\n\t\"Ú\": \"U\",\r\n\t\"Û\": \"U\",\r\n\t\"Ü\": \"U\",\r\n\t\"Ý\": \"Y\",\r\n\t\"à\": \"a\",\r\n\t\"á\": \"a\",\r\n\t\"â\": \"a\",\r\n\t\"ã\": \"a\",\r\n\t\"ä\": \"a\",\r\n\t\"å\": \"a\",\r\n\t\"ấ\": \"a\",\r\n\t\"ắ\": \"a\",\r\n\t\"ẳ\": \"a\",\r\n\t\"ẵ\": \"a\",\r\n\t\"ặ\": \"a\",\r\n\t\"æ\": \"ae\",\r\n\t\"ầ\": \"a\",\r\n\t\"ằ\": \"a\",\r\n\t\"ȃ\": \"a\",\r\n\t\"ç\": \"c\",\r\n\t\"ḉ\": \"c\",\r\n\t\"è\": \"e\",\r\n\t\"é\": \"e\",\r\n\t\"ê\": \"e\",\r\n\t\"ë\": \"e\",\r\n\t\"ế\": \"e\",\r\n\t\"ḗ\": \"e\",\r\n\t\"ề\": \"e\",\r\n\t\"ḕ\": \"e\",\r\n\t\"ḝ\": \"e\",\r\n\t\"ȇ\": \"e\",\r\n\t\"ì\": \"i\",\r\n\t\"í\": \"i\",\r\n\t\"î\": \"i\",\r\n\t\"ï\": \"i\",\r\n\t\"ḯ\": \"i\",\r\n\t\"ȋ\": \"i\",\r\n\t\"ð\": \"d\",\r\n\t\"ñ\": \"n\",\r\n\t\"ò\": \"o\",\r\n\t\"ó\": \"o\",\r\n\t\"ô\": \"o\",\r\n\t\"õ\": \"o\",\r\n\t\"ö\": \"o\",\r\n\t\"ø\": \"o\",\r\n\t\"ố\": \"o\",\r\n\t\"ṍ\": \"o\",\r\n\t\"ṓ\": \"o\",\r\n\t\"ȏ\": \"o\",\r\n\t\"ù\": \"u\",\r\n\t\"ú\": \"u\",\r\n\t\"û\": \"u\",\r\n\t\"ü\": \"u\",\r\n\t\"ý\": \"y\",\r\n\t\"ÿ\": \"y\",\r\n\t\"Ā\": \"A\",\r\n\t\"ā\": \"a\",\r\n\t\"Ă\": \"A\",\r\n\t\"ă\": \"a\",\r\n\t\"Ą\": \"A\",\r\n\t\"ą\": \"a\",\r\n\t\"Ć\": \"C\",\r\n\t\"ć\": \"c\",\r\n\t\"Ĉ\": \"C\",\r\n\t\"ĉ\": \"c\",\r\n\t\"Ċ\": \"C\",\r\n\t\"ċ\": \"c\",\r\n\t\"Č\": \"C\",\r\n\t\"č\": \"c\",\r\n\t\"C̆\": \"C\",\r\n\t\"c̆\": \"c\",\r\n\t\"Ď\": \"D\",\r\n\t\"ď\": \"d\",\r\n\t\"Đ\": \"D\",\r\n\t\"đ\": \"d\",\r\n\t\"Ē\": \"E\",\r\n\t\"ē\": \"e\",\r\n\t\"Ĕ\": \"E\",\r\n\t\"ĕ\": \"e\",\r\n\t\"Ė\": \"E\",\r\n\t\"ė\": \"e\",\r\n\t\"Ę\": \"E\",\r\n\t\"ę\": \"e\",\r\n\t\"Ě\": \"E\",\r\n\t\"ě\": \"e\",\r\n\t\"Ĝ\": \"G\",\r\n\t\"Ǵ\": \"G\",\r\n\t\"ĝ\": \"g\",\r\n\t\"ǵ\": \"g\",\r\n\t\"Ğ\": \"G\",\r\n\t\"ğ\": \"g\",\r\n\t\"Ġ\": \"G\",\r\n\t\"ġ\": \"g\",\r\n\t\"Ģ\": \"G\",\r\n\t\"ģ\": \"g\",\r\n\t\"Ĥ\": \"H\",\r\n\t\"ĥ\": \"h\",\r\n\t\"Ħ\": \"H\",\r\n\t\"ħ\": \"h\",\r\n\t\"Ḫ\": \"H\",\r\n\t\"ḫ\": \"h\",\r\n\t\"Ĩ\": \"I\",\r\n\t\"ĩ\": \"i\",\r\n\t\"Ī\": \"I\",\r\n\t\"ī\": \"i\",\r\n\t\"Ĭ\": \"I\",\r\n\t\"ĭ\": \"i\",\r\n\t\"Į\": \"I\",\r\n\t\"į\": \"i\",\r\n\t\"İ\": \"I\",\r\n\t\"ı\": \"i\",\r\n\t\"Ĳ\": \"IJ\",\r\n\t\"ĳ\": \"ij\",\r\n\t\"Ĵ\": \"J\",\r\n\t\"ĵ\": \"j\",\r\n\t\"Ķ\": \"K\",\r\n\t\"ķ\": \"k\",\r\n\t\"Ḱ\": \"K\",\r\n\t\"ḱ\": \"k\",\r\n\t\"K̆\": \"K\",\r\n\t\"k̆\": \"k\",\r\n\t\"Ĺ\": \"L\",\r\n\t\"ĺ\": \"l\",\r\n\t\"Ļ\": \"L\",\r\n\t\"ļ\": \"l\",\r\n\t\"Ľ\": \"L\",\r\n\t\"ľ\": \"l\",\r\n\t\"Ŀ\": \"L\",\r\n\t\"ŀ\": \"l\",\r\n\t\"Ł\": \"l\",\r\n\t\"ł\": \"l\",\r\n\t\"Ḿ\": \"M\",\r\n\t\"ḿ\": \"m\",\r\n\t\"M̆\": \"M\",\r\n\t\"m̆\": \"m\",\r\n\t\"Ń\": \"N\",\r\n\t\"ń\": \"n\",\r\n\t\"Ņ\": \"N\",\r\n\t\"ņ\": \"n\",\r\n\t\"Ň\": \"N\",\r\n\t\"ň\": \"n\",\r\n\t\"ŉ\": \"n\",\r\n\t\"N̆\": \"N\",\r\n\t\"n̆\": \"n\",\r\n\t\"Ō\": \"O\",\r\n\t\"ō\": \"o\",\r\n\t\"Ŏ\": \"O\",\r\n\t\"ŏ\": \"o\",\r\n\t\"Ő\": \"O\",\r\n\t\"ő\": \"o\",\r\n\t\"Œ\": \"OE\",\r\n\t\"œ\": \"oe\",\r\n\t\"P̆\": \"P\",\r\n\t\"p̆\": \"p\",\r\n\t\"Ŕ\": \"R\",\r\n\t\"ŕ\": \"r\",\r\n\t\"Ŗ\": \"R\",\r\n\t\"ŗ\": \"r\",\r\n\t\"Ř\": \"R\",\r\n\t\"ř\": \"r\",\r\n\t\"R̆\": \"R\",\r\n\t\"r̆\": \"r\",\r\n\t\"Ȓ\": \"R\",\r\n\t\"ȓ\": \"r\",\r\n\t\"Ś\": \"S\",\r\n\t\"ś\": \"s\",\r\n\t\"Ŝ\": \"S\",\r\n\t\"ŝ\": \"s\",\r\n\t\"Ş\": \"S\",\r\n\t\"Ș\": \"S\",\r\n\t\"ș\": \"s\",\r\n\t\"ş\": \"s\",\r\n\t\"Š\": \"S\",\r\n\t\"š\": \"s\",\r\n\t\"Ţ\": \"T\",\r\n\t\"ţ\": \"t\",\r\n\t\"ț\": \"t\",\r\n\t\"Ț\": \"T\",\r\n\t\"Ť\": \"T\",\r\n\t\"ť\": \"t\",\r\n\t\"Ŧ\": \"T\",\r\n\t\"ŧ\": \"t\",\r\n\t\"T̆\": \"T\",\r\n\t\"t̆\": \"t\",\r\n\t\"Ũ\": \"U\",\r\n\t\"ũ\": \"u\",\r\n\t\"Ū\": \"U\",\r\n\t\"ū\": \"u\",\r\n\t\"Ŭ\": \"U\",\r\n\t\"ŭ\": \"u\",\r\n\t\"Ů\": \"U\",\r\n\t\"ů\": \"u\",\r\n\t\"Ű\": \"U\",\r\n\t\"ű\": \"u\",\r\n\t\"Ų\": \"U\",\r\n\t\"ų\": \"u\",\r\n\t\"Ȗ\": \"U\",\r\n\t\"ȗ\": \"u\",\r\n\t\"V̆\": \"V\",\r\n\t\"v̆\": \"v\",\r\n\t\"Ŵ\": \"W\",\r\n\t\"ŵ\": \"w\",\r\n\t\"Ẃ\": \"W\",\r\n\t\"ẃ\": \"w\",\r\n\t\"X̆\": \"X\",\r\n\t\"x̆\": \"x\",\r\n\t\"Ŷ\": \"Y\",\r\n\t\"ŷ\": \"y\",\r\n\t\"Ÿ\": \"Y\",\r\n\t\"Y̆\": \"Y\",\r\n\t\"y̆\": \"y\",\r\n\t\"Ź\": \"Z\",\r\n\t\"ź\": \"z\",\r\n\t\"Ż\": \"Z\",\r\n\t\"ż\": \"z\",\r\n\t\"Ž\": \"Z\",\r\n\t\"ž\": \"z\",\r\n\t\"ſ\": \"s\",\r\n\t\"ƒ\": \"f\",\r\n\t\"Ơ\": \"O\",\r\n\t\"ơ\": \"o\",\r\n\t\"Ư\": \"U\",\r\n\t\"ư\": \"u\",\r\n\t\"Ǎ\": \"A\",\r\n\t\"ǎ\": \"a\",\r\n\t\"Ǐ\": \"I\",\r\n\t\"ǐ\": \"i\",\r\n\t\"Ǒ\": \"O\",\r\n\t\"ǒ\": \"o\",\r\n\t\"Ǔ\": \"U\",\r\n\t\"ǔ\": \"u\",\r\n\t\"Ǖ\": \"U\",\r\n\t\"ǖ\": \"u\",\r\n\t\"Ǘ\": \"U\",\r\n\t\"ǘ\": \"u\",\r\n\t\"Ǚ\": \"U\",\r\n\t\"ǚ\": \"u\",\r\n\t\"Ǜ\": \"U\",\r\n\t\"ǜ\": \"u\",\r\n\t\"Ứ\": \"U\",\r\n\t\"ứ\": \"u\",\r\n\t\"Ṹ\": \"U\",\r\n\t\"ṹ\": \"u\",\r\n\t\"Ǻ\": \"A\",\r\n\t\"ǻ\": \"a\",\r\n\t\"Ǽ\": \"AE\",\r\n\t\"ǽ\": \"ae\",\r\n\t\"Ǿ\": \"O\",\r\n\t\"ǿ\": \"o\",\r\n\t\"Þ\": \"TH\",\r\n\t\"þ\": \"th\",\r\n\t\"Ṕ\": \"P\",\r\n\t\"ṕ\": \"p\",\r\n\t\"Ṥ\": \"S\",\r\n\t\"ṥ\": \"s\",\r\n\t\"X́\": \"X\",\r\n\t\"x́\": \"x\",\r\n\t\"Ѓ\": \"Г\",\r\n\t\"ѓ\": \"г\",\r\n\t\"Ќ\": \"К\",\r\n\t\"ќ\": \"к\",\r\n\t\"A̋\": \"A\",\r\n\t\"a̋\": \"a\",\r\n\t\"E̋\": \"E\",\r\n\t\"e̋\": \"e\",\r\n\t\"I̋\": \"I\",\r\n\t\"i̋\": \"i\",\r\n\t\"Ǹ\": \"N\",\r\n\t\"ǹ\": \"n\",\r\n\t\"Ồ\": \"O\",\r\n\t\"ồ\": \"o\",\r\n\t\"Ṑ\": \"O\",\r\n\t\"ṑ\": \"o\",\r\n\t\"Ừ\": \"U\",\r\n\t\"ừ\": \"u\",\r\n\t\"Ẁ\": \"W\",\r\n\t\"ẁ\": \"w\",\r\n\t\"Ỳ\": \"Y\",\r\n\t\"ỳ\": \"y\",\r\n\t\"Ȁ\": \"A\",\r\n\t\"ȁ\": \"a\",\r\n\t\"Ȅ\": \"E\",\r\n\t\"ȅ\": \"e\",\r\n\t\"Ȉ\": \"I\",\r\n\t\"ȉ\": \"i\",\r\n\t\"Ȍ\": \"O\",\r\n\t\"ȍ\": \"o\",\r\n\t\"Ȑ\": \"R\",\r\n\t\"ȑ\": \"r\",\r\n\t\"Ȕ\": \"U\",\r\n\t\"ȕ\": \"u\",\r\n\t\"B̌\": \"B\",\r\n\t\"b̌\": \"b\",\r\n\t\"Č̣\": \"C\",\r\n\t\"č̣\": \"c\",\r\n\t\"Ê̌\": \"E\",\r\n\t\"ê̌\": \"e\",\r\n\t\"F̌\": \"F\",\r\n\t\"f̌\": \"f\",\r\n\t\"Ǧ\": \"G\",\r\n\t\"ǧ\": \"g\",\r\n\t\"Ȟ\": \"H\",\r\n\t\"ȟ\": \"h\",\r\n\t\"J̌\": \"J\",\r\n\t\"ǰ\": \"j\",\r\n\t\"Ǩ\": \"K\",\r\n\t\"ǩ\": \"k\",\r\n\t\"M̌\": \"M\",\r\n\t\"m̌\": \"m\",\r\n\t\"P̌\": \"P\",\r\n\t\"p̌\": \"p\",\r\n\t\"Q̌\": \"Q\",\r\n\t\"q̌\": \"q\",\r\n\t\"Ř̩\": \"R\",\r\n\t\"ř̩\": \"r\",\r\n\t\"Ṧ\": \"S\",\r\n\t\"ṧ\": \"s\",\r\n\t\"V̌\": \"V\",\r\n\t\"v̌\": \"v\",\r\n\t\"W̌\": \"W\",\r\n\t\"w̌\": \"w\",\r\n\t\"X̌\": \"X\",\r\n\t\"x̌\": \"x\",\r\n\t\"Y̌\": \"Y\",\r\n\t\"y̌\": \"y\",\r\n\t\"A̧\": \"A\",\r\n\t\"a̧\": \"a\",\r\n\t\"B̧\": \"B\",\r\n\t\"b̧\": \"b\",\r\n\t\"Ḑ\": \"D\",\r\n\t\"ḑ\": \"d\",\r\n\t\"Ȩ\": \"E\",\r\n\t\"ȩ\": \"e\",\r\n\t\"Ɛ̧\": \"E\",\r\n\t\"ɛ̧\": \"e\",\r\n\t\"Ḩ\": \"H\",\r\n\t\"ḩ\": \"h\",\r\n\t\"I̧\": \"I\",\r\n\t\"i̧\": \"i\",\r\n\t\"Ɨ̧\": \"I\",\r\n\t\"ɨ̧\": \"i\",\r\n\t\"M̧\": \"M\",\r\n\t\"m̧\": \"m\",\r\n\t\"O̧\": \"O\",\r\n\t\"o̧\": \"o\",\r\n\t\"Q̧\": \"Q\",\r\n\t\"q̧\": \"q\",\r\n\t\"U̧\": \"U\",\r\n\t\"u̧\": \"u\",\r\n\t\"X̧\": \"X\",\r\n\t\"x̧\": \"x\",\r\n\t\"Z̧\": \"Z\",\r\n\t\"z̧\": \"z\",\r\n};\r\n\r\nvar chars = Object.keys(characterMap).join('|');\r\nvar allAccents = new RegExp(chars, 'g');\r\nvar firstAccent = new RegExp(chars, '');\r\n\r\nvar removeAccents = function(string) {\t\r\n\treturn string.replace(allAccents, function(match) {\r\n\t\treturn characterMap[match];\r\n\t});\r\n};\r\n\r\nvar hasAccents = function(string) {\r\n\treturn !!string.match(firstAccent);\r\n};\r\n\r\nmodule.exports = removeAccents;\r\nmodule.exports.has = hasAccents;\r\nmodule.exports.remove = removeAccents;\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"className\", \"cssModule\", \"size\", \"bordered\", \"borderless\", \"striped\", \"dark\", \"hover\", \"responsive\", \"tag\", \"responsiveTag\", \"innerRef\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  size: PropTypes.string,\n  bordered: PropTypes.bool,\n  borderless: PropTypes.bool,\n  striped: PropTypes.bool,\n  dark: PropTypes.bool,\n  hover: PropTypes.bool,\n  responsive: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\n  tag: tagPropType,\n  responsiveTag: tagPropType,\n  innerRef: PropTypes.oneOfType([PropTypes.func, PropTypes.string, PropTypes.object])\n};\nvar defaultProps = {\n  tag: 'table',\n  responsiveTag: 'div'\n};\n\nvar Table = function Table(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      size = props.size,\n      bordered = props.bordered,\n      borderless = props.borderless,\n      striped = props.striped,\n      dark = props.dark,\n      hover = props.hover,\n      responsive = props.responsive,\n      Tag = props.tag,\n      ResponsiveTag = props.responsiveTag,\n      innerRef = props.innerRef,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var classes = mapToCssModules(classNames(className, 'table', size ? 'table-' + size : false, bordered ? 'table-bordered' : false, borderless ? 'table-borderless' : false, striped ? 'table-striped' : false, dark ? 'table-dark' : false, hover ? 'table-hover' : false), cssModule);\n  var table = /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    ref: innerRef,\n    className: classes\n  }));\n\n  if (responsive) {\n    var responsiveClassName = mapToCssModules(responsive === true ? 'table-responsive' : \"table-responsive-\" + responsive, cssModule);\n    return /*#__PURE__*/React.createElement(ResponsiveTag, {\n      className: responsiveClassName\n    }, table);\n  }\n\n  return table;\n};\n\nTable.propTypes = propTypes;\nTable.defaultProps = defaultProps;\nexport default Table;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"className\", \"listClassName\", \"cssModule\", \"size\", \"tag\", \"listTag\", \"aria-label\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  listClassName: PropTypes.string,\n  cssModule: PropTypes.object,\n  size: PropTypes.string,\n  tag: tagPropType,\n  listTag: tagPropType,\n  'aria-label': PropTypes.string\n};\nvar defaultProps = {\n  tag: 'nav',\n  listTag: 'ul',\n  'aria-label': 'pagination'\n};\n\nvar Pagination = function Pagination(props) {\n  var _classNames;\n\n  var className = props.className,\n      listClassName = props.listClassName,\n      cssModule = props.cssModule,\n      size = props.size,\n      Tag = props.tag,\n      ListTag = props.listTag,\n      label = props['aria-label'],\n      attributes = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var classes = mapToCssModules(classNames(className), cssModule);\n  var listClasses = mapToCssModules(classNames(listClassName, 'pagination', (_classNames = {}, _classNames[\"pagination-\" + size] = !!size, _classNames)), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, {\n    className: classes,\n    \"aria-label\": label\n  }, /*#__PURE__*/React.createElement(ListTag, _extends({}, attributes, {\n    className: listClasses\n  })));\n};\n\nPagination.propTypes = propTypes;\nPagination.defaultProps = defaultProps;\nexport default Pagination;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"active\", \"className\", \"cssModule\", \"disabled\", \"tag\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  active: PropTypes.bool,\n  children: PropTypes.node,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  disabled: PropTypes.bool,\n  tag: tagPropType\n};\nvar defaultProps = {\n  tag: 'li'\n};\n\nvar PaginationItem = function PaginationItem(props) {\n  var active = props.active,\n      className = props.className,\n      cssModule = props.cssModule,\n      disabled = props.disabled,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var classes = mapToCssModules(classNames(className, 'page-item', {\n    active: active,\n    disabled: disabled\n  }), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nPaginationItem.propTypes = propTypes;\nPaginationItem.defaultProps = defaultProps;\nexport default PaginationItem;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"className\", \"cssModule\", \"next\", \"previous\", \"first\", \"last\", \"tag\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  'aria-label': PropTypes.string,\n  children: PropTypes.node,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  next: PropTypes.bool,\n  previous: PropTypes.bool,\n  first: PropTypes.bool,\n  last: PropTypes.bool,\n  tag: tagPropType\n};\nvar defaultProps = {\n  tag: 'a'\n};\n\nvar PaginationLink = function PaginationLink(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      next = props.next,\n      previous = props.previous,\n      first = props.first,\n      last = props.last,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var classes = mapToCssModules(classNames(className, 'page-link'), cssModule);\n  var defaultAriaLabel;\n\n  if (previous) {\n    defaultAriaLabel = 'Previous';\n  } else if (next) {\n    defaultAriaLabel = 'Next';\n  } else if (first) {\n    defaultAriaLabel = 'First';\n  } else if (last) {\n    defaultAriaLabel = 'Last';\n  }\n\n  var ariaLabel = props['aria-label'] || defaultAriaLabel;\n  var defaultCaret;\n\n  if (previous) {\n    defaultCaret = \"\\u2039\";\n  } else if (next) {\n    defaultCaret = \"\\u203A\";\n  } else if (first) {\n    defaultCaret = \"\\xAB\";\n  } else if (last) {\n    defaultCaret = \"\\xBB\";\n  }\n\n  var children = props.children;\n\n  if (children && Array.isArray(children) && children.length === 0) {\n    children = null;\n  }\n\n  if (!attributes.href && Tag === 'a') {\n    Tag = 'button';\n  }\n\n  if (previous || next || first || last) {\n    children = [/*#__PURE__*/React.createElement(\"span\", {\n      \"aria-hidden\": \"true\",\n      key: \"caret\"\n    }, children || defaultCaret), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"sr-only\",\n      key: \"sr\"\n    }, ariaLabel)];\n  }\n\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    \"aria-label\": ariaLabel\n  }), children);\n};\n\nPaginationLink.propTypes = propTypes;\nPaginationLink.defaultProps = defaultProps;\nexport default PaginationLink;"],"sourceRoot":""}